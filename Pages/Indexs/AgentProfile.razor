@page "/Indexs/AgentProfile"
<PageTitle>Agent Profile</PageTitle>
@attribute [Authorize]
@*@inject GetReportService getReportService;*@
@inject IHttpService HttpService;
@inject IAuthService AuthService;
@inject IJSRuntime JS;
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;
@inject  Blazored.Toast.Services.IToastService toastService;
@inject NavigationManager NavigationManager;
@using System.Text.RegularExpressions;
@inject BrowserService Service
<div class="container-fluid" style="padding-left: 0px!important;padding-right: 15px!important;background:white!important;background-color:white!important;max-height:@MaxHeightBody!important;height:@MaxHeightBody!important;">
    <div class="row" style="padding-bottom: 2px!important;padding-top:5px!important">
        <div class="col-12" style="padding-right:0px!important">
            <div class="card">
               <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                    <section class="ss-panel-new">
                        <span class="ss-header-new">Agent Profile</span>
                        <EditForm Model="@model">
                            <div class="row g-1">
                                <div class="col-md-2" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                    <div class="did-floating-label-content">
                                        <select class="did-floating-input" id="ToCountry" @bind="@model.ToCountry"   placeholder="  ">
                                            @foreach (var country in ReceiveCountryList)
                                            {
                                                <option value="@country.CountryCode">@country.CountryName</option>}
                                        </select>

                                        <label class="did-floating-label" >Country</label>
                                    </div>
                                </div>
                                <div class="col-md-2" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                    <div class="did-floating-label-content">
                                        <select  id="formValidationSelect2"
                                        name="formValidationSelect2"
                                        class="did-floating-input"
                                        data-allow-clear="true" @bind="@model.StateID"  placeholder="  ">
                                            @foreach (var state in StateList)
                                            {
                                                <option value="@state.StateCode">@state.StateName</option>
                                            }
                                        </select>

                                        <label class="did-floating-label" >State</label>
                                    </div>
                                </div>
                                <div class="col-md-2" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                    <div class="did-floating-label-content">
                                        <select class="did-floating-input" id="AgentID" name="AgentID" @bind="@model.AgentID"   placeholder="  ">
                                            @if (AgentList.Count > 0)
                                            {
                                                @foreach (var agent in AgentList)
                                                {
                                                    <option value="@agent.Agent_ID">@agent.Agent_Name</option>
                                                }}
                                        </select>

                                        <label class="did-floating-label" >Agent</label>
                                    </div>
                                </div>

                                <div class="col-md-2" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                    <div class="did-floating-label-content">
                                        <select class="did-floating-input"  @bind="@model.StatusID"  placeholder="  ">
                                            @if (TypeofStatusList.Count > 0)
                                            {
                                                @foreach (var t in TypeofStatusList)
                                                {
                                                    <option value="@t.StatusID">@t.StatusName</option>
                                                }
                                            }
                                        </select>

                                        <label class="did-floating-label" >Status</label>
                                    </div>
                                </div>
                                <div class="col-md-2" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                    <div class="did-floating-label-content">
                                        <select class="did-floating-input"  @bind="@model.TypeofAgent"  placeholder="  ">
                                            @if (UserTypeList.Count > 0)
                                            {
                                                @foreach (var t in UserTypeList)
                                                {
                                                    <option value="@t.TYPE_AGENT">@t.TYPE_AGENTNAME</option>
                                                }
                                            }
                                        </select>

                                        <label class="did-floating-label" >Type</label>
                                    </div>
                                </div>
                                <div class="col-md-2" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                    <div class="did-floating-label-content">
                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@model.Search" placeholder="  ">
                                        <label class="did-floating-label" >Search Content</label>
                                    </div>
                                </div>

                            </div>
                            <div class="row g-1">
                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">                                   
                                    <button type="button" class="btn btn-primary" @onclick="ViewReport" disabled="@isViewingReport"   style="width: 32% !important">
                                        @if (isViewingReport)
                                        {
                                            <span class="spinner-border spinner-border-sm mr-1"></span>}
                                        View Report
                                    </button> 
                                    <button type="button" class="btn btn-primary" @onclick="ExportExcel" disabled=@isExportExcel style="display:@displayVerify;width:32%!important">
                                        @if (isExportExcel)
                                        {
                                            <span class="spinner-border spinner-border-sm mr-1"></span>}
                                        Export Excel
                                    </button>
                                    <button type="button" class="btn btn-primary" @onclick="AddNewModel" style="width:32%!important">
                                        <i class="bx bx-plus bx-xs me-1"></i>Add New
                                    </button>
                                </div>
                            </div>
                        </EditForm>
                    </section>
                </div>
            </div>
        </div>
    </div>
    @if (@isView)
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-datatable dataTable_select table-responsive" style="padding-bottom: 0px!important;padding-top: 5px!important;;max-height:@MaxHeight!important;height:@MaxHeight!important;">
                        <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" style="border-color: #f3f4f4!important;">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>No</th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Agent Id</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Agent Name</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Legal Name</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">DBA</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Owner Name</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Address</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Phone</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Fax</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Email</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">EIN#</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Type of Business</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Business Structure</span></div></th>
                                             <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Secretary of state file #</span></div></th>
                                    <th>
                                        <div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">City Business license</span>
                                        </div>
                                    </th>
                                     <th>
                                        <div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Owner 1 ID </span>
                                        </div>
                                    </th>
                                    <th>
                                        <div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Owner 2 ID</span>
                                        </div>
                                    </th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Compliance Officer</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Country for Sending</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Agent Type</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Agent Start Date</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Agent End Date</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Status</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Reason for Ending Agreement</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Bond</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Credit Line</span></div></th>
                                    <th><div class="d-flex flex-column">
                                            <span class="emp_name text-truncate">Max Credit Line</span></div></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in AgentListModels)
                                {
                                    <tr>
                                        <td style="text-align:center!important">
                                            <button type="button" class="btn btn-link" @onclick="() => EditAgent(item.AGENT_ID)">
                                                <i class="fas fa-edit" />
                                            </button>
                                        </td>
                                        <td>@item.RowNumber</td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.AGENT_ID</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.AGENT_NAME</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.LEGAL_NAME</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.DBA</span>
                                            </div>
                                        </td> 
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.FULLNAME</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.FULLADDRESS</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.PHONE</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.FAX</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.EMAIL</span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.EIN
                                                </span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.BUSINESS_TYPE
                                                </span>
                                            </div>
                                        </td> 
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.BUSINESS_STRUCT_NAME
                                                </span>
                                            </div>
                                        </td>
                                                 <td>                                        
                                                    <div class="d-flex flex-column">
                                                        <span class="emp_name text-truncate">
                                                    @item.STATEFILE
                                                        </span>
                                                    </div>
                                                </td>
                                          <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.LICENSE_NO
                                                </span>
                                            </div>
                                        </td>
                                          <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.ID
                                                </span>
                                            </div>
                                        </td>
                                          <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.ID1
                                                </span>
                                            </div>
                                        </td>
                                               
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.COMPLIANCE_OFFICER
                                                </span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">

                                                <span class="emp_name text-truncate">
                                                    @item.SENDING_COUNTRY
                                                </span>
                                            </div>
                                        </td>
                                        @* <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                        @item.BUSINESS_STRUCT
                                                        </span>
                                                </div>
                                           </td>*@
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.AGENT_TYPE
                                                </span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.DATE_CREATE
                                                </span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.DATE_STOP
                                                </span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.StatusName
                                                </span>
                                            </div>
                                        </td>
                                        <td>                                        
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @item.REASONFORBLOCK
                                                </span>
                                            </div>
                                        </td>
                                        <td style="text-align:right!important">                                     
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @String.Format("{0:n2}", item.BondAmount)
                                                </span>
                                            </div>
                                        </td>
                                        <td style="text-align:right!important">                                   
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @String.Format("{0:n2}", item.CREDIT_LINE)
                                                </span>
                                            </div>
                                        </td>
                                        <td style="text-align:right!important">                                      
                                            <div class="d-flex flex-column">
                                                <span class="emp_name text-truncate">
                                                    @String.Format("{0:n2}", item.CREDIT_LINEAPP)
                                                </span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }


    <MudDialog @bind-IsVisible="@isAddNewAgent" Options="dialogOptions" Style="overflow-y: scroll;height:90%!important">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon  Class="mr-3"/> Add New Agent
            </MudText>

        </TitleContent>
        <DialogContent>
            <MudContainer Class="mud-container-maxwidth" Style="padding-left:0px!important;padding-right:0px!important">
                <div class="row">
                    <div class="row">
                        <div class="col-12">
                            <EditForm Model="@modelAddNewAgent">
                                <div class="row" style="padding-bottom:5px!important">
                                    <div class="col-md-6" style="padding-right: 20px">
                                        <div class="row">
                                            <div class="card">
                                                <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                    <section class="ss-panel-new1">
                                                        <span class="ss-header-new">Agent Information</span>
                                                        <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                            @* <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.AGENT_ID"  placeholder="  ">
                                                            <label class="did-floating-label" >Agent ID</label>
                                                            </div>
                                                            </div>*@
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.AGENT_NAME" @ref="@E_AGENT_NAME" style="background-color:@C_AGENT_NAME" placeholder="  ">
                                                                    <label class="did-floating-label">Agent Name</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.LEGAL_NAME" placeholder="  " @ref="@E_LEGAL_NAME" style="background-color:@C_LEGAL_NAME">
                                                                    <label class="did-floating-label">Agent Legal Name</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.DBA" placeholder="  " @ref="@E_DBA" style="background-color:@C_DBA">
                                                                    <label class="did-floating-label">DBA</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.ADDRESS" placeholder="  " @ref="@E_ADDRESS" style="background-color:@C_ADDRESS">
                                                                    <label class="did-floating-label">Address</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <select class="did-floating-input" value="@modelAddNewAgent.COUNTRY" @onchange="ChangeCountry" placeholder="  " @ref="@E_COUNTRY" style="background-color:@C_COUNTRY;text-transform: uppercase!important">
                                                                        @foreach (var country in CountryList)
                                                                        {
                                                                            <option value="@country.CountryCode">@country.CountryName</option>
                                                                        }
                                                                    </select>
                                                                    <label class="did-floating-label">Country</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <select class="did-floating-input" @bind="@modelAddNewAgent.STATE" placeholder="  " @ref="@E_STATE" style="background-color:@C_STATE;text-transform: uppercase!important">
                                                                        @foreach (var state in SendStateList)
                                                                        {
                                                                            <option value="@state.StateCode">@state.StateName</option>
                                                                        }
                                                                    </select>
                                                                    <label class="did-floating-label">State</label>
                                                                </div>
                                                            </div>

                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.CITY" placeholder="  " @ref="@E_CITY" style="background-color:@C_CITY">
                                                                    <label class="did-floating-label">City</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("00000"))" @bind-Value="@modelAddNewAgent.ZIP_CODE" Label="Zipcode" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                @*  <div class="did-floating-label-content">
                                                                <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.ZIP_CODE"  placeholder="  "  @ref="@E_ZIP_CODE" style="background-color:@C_ZIP_CODE"  >
                                                                <label class="did-floating-label" >Zipcode</label>
                                                                </div>*@
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("000-000-0000"))" @bind-Value="@modelAddNewAgent.PHONE" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                                                                @*<div class="did-floating-label-content">
                                                                <input type="text" class="form-control phone-mask" id="floatingInput"  @bind="@modelAddNewAgent.PHONE"  placeholder="  "  @ref="@E_PHONE" style="background-color:@C_PHONE"  >
                                                                <label class="did-floating-label" >Phone</label>
                                                                </div>*@
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.FAX" placeholder="  " @ref="@E_FAX" style="background-color:@C_FAX">
                                                                    <label class="did-floating-label">Fax</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.EMAIL" placeholder="  " @ref="@E_EMAIL" style="background-color:@C_EMAIL">
                                                                    <label class="did-floating-label">Email</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.LOCATION" placeholder="  " @ref="@E_LOCATION" style="background-color:@C_LOCATION">
                                                                    <label class="did-floating-label">Location</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.BUSINESS_TYPE" placeholder="  " @ref="@E_BUSINESS_TYPE" style="background-color:@C_BUSINESS_TYPE">
                                                                    <label class="did-floating-label">Business Type</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <select class="did-floating-input" value="@modelAddNewAgent.BUSINESS_STRUCT" @onchange="ChangeBusinessAdd" placeholder="  " @ref="@E_BUSINESS_STRUCT" style="background-color:@C_BUSINESS_STRUCT;text-transform: uppercase!important">
                                                                        @foreach (var item in businessList)
                                                                        {
                                                                            <option value="@item.IDType">@item.IDName</option>
                                                                        }
                                                                    </select>
                                                                    <label class="did-floating-label">Business Struct</label>
                                                                </div>

                                                                @*  <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.BUSINESS_STRUCT" placeholder="  " @ref="@E_BUSINESS_STRUCT" style="background-color:@C_BUSINESS_STRUCT">
                                                                        <label class="did-floating-label">Business Struct</label>
                                                                    </div> *@
                                                            </div>
                                                            @*  <div class="col-md-6" ></div> *@
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.STATEFILE" placeholder="  " @ref="@E_STATEFILE" style="background-color:@C_STATEFILE">
                                                                    <label class="did-floating-label">Secretary of State File #</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                @*    <div class="did-floating-label-content"> *@
                                                                <MudDatePicker Label="Expiration Date" @bind-Date="modelAddNewAgent.EXPIRECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" />

                                                                @* <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.EXPIRE"  placeholder="  ">
                                                                <label class="did-floating-label" >Expiration Date</label> *@
                                                                @*  </div> *@
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.LICENSE_NO" placeholder="  " @ref="@E_LICENSE_NO" style="background-color:@C_LICENSE_NO">
                                                                    <label class="did-floating-label">City Business License #	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <MudDatePicker Label="Expiration Date" @bind-Date="modelAddNewAgent.EXPIRE1Con"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" />

                                                                    @* <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.EXPIRE1"  placeholder="  ">
                                                                    <label class="did-floating-label" >Expiration Date</label> *@
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("000000000"))" @bind-Value="@modelAddNewAgent.EIN" Label="EIN#/SS#" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                @* <div class="did-floating-label-content">
                                                                <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.EIN"  placeholder="  "  @ref="@E_EIN" style="background-color:@C_EIN"  >
                                                                <label class="did-floating-label" >EIN#/SS#</label>
                                                                </div>*@
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <select class="did-floating-input" @bind="@modelAddNewAgent.TYPE_AGENT" placeholder="  " @ref="@E_AGENT_TYPE" style="background-color:@C_AGENT_TYPE;text-transform: uppercase!important">
                                                                        @if (UserTypeLists.Count > 0)
                                                                        {
                                                                            @foreach (var t in UserTypeLists)
                                                                            {
                                                                                <option value="@t.TYPE_AGENT">@t.TYPE_AGENTNAME</option>
                                                                            }
                                                                        }
                                                                    </select>
                                                                    @* <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.AGENT_TYPE"  placeholder="  "  @ref="@E_AGENT_TYPE" style="background-color:@C_AGENT_TYPE"  >*@
                                                                    <label class="did-floating-label">Agent Type</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">

                                                                <MudDatePicker Label="Start Date" @bind-Date="modelAddNewAgent.DATE_CREATECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined"  Editable="true" />


                                                                @*  <div class="did-floating-label-content">
                                                                        <input type="Date" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.DATE_CREATE" placeholder="  ">
                                                                        <label class="did-floating-label">Start Date</label>
                                                                    </div> *@
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <MudDatePicker Label="End Date" @bind-Date="modelAddNewAgent.DATE_STOPCon" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" />
                                                                @*  <div class="did-floating-label-content">
                                                                        <input type="Date" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.DATE_STOP" placeholder="  ">
                                                                        <label class="did-floating-label">End Date</label>
                                                                    </div> *@
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                @*  <div class="form-check">
                                                                <label class="form-check-label" for="flexCheckIndeterminate">
                                                                Domestic
                                                                </label>
                                                                <input class="form-check-input" type="checkbox" value="" id="chkDomestic">

                                                                </div>*@

                                                                <span class="emp_name text-truncate">
                                                                    <input type="checkbox" checked="@modelAddNewAgent.payment"
                                                                    @onchange="eventArgs => { CheckAddPaymentClicked(eventArgs.Value); }" />
                                                                </span>  Domestic
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.COMPLIANCE_OFFICER" placeholder="  " @ref="@E_COMPLIANCE_OFFICER" style="background-color:@C_COMPLIANCE_OFFICER">
                                                                    <label class="did-floating-label">Compliance Officer</label>
                                                                </div>
                                                            </div>
                                                             <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.CID"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >ID</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="Expiration" @bind-Date="modelAddNewAgent.CEXPIREDATECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true"  />
                                                                                                         
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelAddNewAgent.CSS" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                    </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.PAYMENT_METHOD" placeholder="  " @ref="@E_PAYMENT_METHOD" style="background-color:@C_PAYMENT_METHOD">
                                                                    <label class="did-floating-label">Payment Method</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.BANK_TYPE" placeholder="  " @ref="@E_BANK_TYPE" style="background-color:@C_BANK_TYPE">
                                                                    <label class="did-floating-label">Bank Type	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.BANK_NAME" placeholder="  " @ref="@E_BANK_NAME" style="background-color:@C_BANK_NAME">
                                                                    <label class="did-floating-label">Bank Name	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.BANK_ADDRESS" placeholder="  " @ref="@E_BANK_ADDRESS" style="background-color:@C_BANK_ADDRESS">
                                                                    <label class="did-floating-label">Bank Address	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.BEGIN_BALANCE" @onchange="AddBEGIN_BALANCEChange" placeholder="  " @ref="@E_BEGIN_BALANCE" style="background-color:@C_BEGIN_BALANCE">
                                                                    <label class="did-floating-label">Begining Balance</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.CREDIT_LINEAPP" @onchange="AddCREDIT_LINEAPPChange" placeholder="  " @ref="@E_CREDIT_LINEAPP" style="background-color:@C_CREDIT_LINEAPP">
                                                                    <label class="did-floating-label">Max Credit Line</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.CREDIT_LINE" @onchange="AddCREDIT_LINEChange" placeholder="  " @ref="@E_CREDIT_LINE" style="background-color:@C_CREDIT_LINE">
                                                                    <label class="did-floating-label">Credit Line</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.HighRiskExposures" @onchange="AddHighRiskExposuresChange" placeholder="  " @ref="@E_HighRiskExposures" style="background-color:@C_HighRiskExposures">
                                                                    <label class="did-floating-label">High Risk Exposures</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.Destination" @onchange="AddDestinationChange" placeholder="  " @ref="@E_Destination" style="background-color:@C_Destination">
                                                                    <label class="did-floating-label">Destination	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.HIFCA" @onchange="AddHIFCAChange" placeholder="  " @ref="@E_HIFCA" style="background-color:@C_HIFCA">
                                                                    <label class="did-floating-label">HIFCA	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.HIDTA" @onchange="AddHIDTAChange" placeholder="  " @ref="@E_HIDTA" style="background-color:@C_HIDTA">
                                                                    <label class="did-floating-label">HIDTA	</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <span class="emp_name text-truncate">
                                                                    <input type="checkbox" checked="@modelAddNewAgent.Bond"
                                                                    @onchange="eventArgs => { CheckAddBondClicked(eventArgs.Value); }" />
                                                                </span>Bond

                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="number" class="did-floating-input" id="floatingInput" value="@modelAddNewAgent.BondAmount" @onchange="AddBondAmountChange" placeholder="  " @ref="@E_BondAmount" style="background-color:@C_BondAmount">
                                                                    <label class="did-floating-label">Bond Amount	</label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </section>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row">
                                            <div class="card">
                                                <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                    <section class="ss-panel-new1">
                                                        <span class="ss-header-new">Owner 1 Information</span>
                                                        <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.FIRSTNAME" placeholder="  " @ref="@E_FIRSTNAME" style="background-color:@C_FIRSTNAME">
                                                                    <label class="did-floating-label">First Name</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.MIDDLENAME" placeholder="  " @ref="@E_MIDDLENAME" style="background-color:@C_MIDDLENAME">
                                                                    <label class="did-floating-label">Middle Name</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.LASTNAME" placeholder="  " @ref="@E_LASTNAME" style="background-color:@C_LASTNAME">
                                                                    <label class="did-floating-label">Last Name</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-8" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.OWNERADDRESS" placeholder="  " @ref="@E_OWNERADDRESS" style="background-color:@C_OWNERADDRESS">
                                                                    <label class="did-floating-label">Address</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <select class="did-floating-input" value="@modelAddNewAgent.OwnerCountry" @onchange="ChangeOwnerCountry" placeholder="  " @ref="@E_OwnerCountry" style="background-color:@C_OwnerCountry;text-transform: uppercase!important">
                                                                        @foreach (var country in CountryList)
                                                                        {
                                                                            <option value="@country.CountryCode">@country.CountryName</option>
                                                                        }
                                                                    </select>
                                                                    <label class="did-floating-label">Country</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <select class="did-floating-input" @bind="@modelAddNewAgent.OWNERSTATE" placeholder="  " @ref="@E_OWNERSTATE" style="background-color:@C_OWNERSTATE;text-transform: uppercase!important">
                                                                        @foreach (var state in StateOwnerList)
                                                                        {
                                                                            <option value="@state.StateCode">@state.StateName</option>
                                                                        }
                                                                    </select>
                                                                    <label class="did-floating-label">State</label>
                                                                </div>
                                                            </div>


                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.OWNERCITY" placeholder="  " @ref="@E_OWNERCITY" style="background-color:@C_OWNERCITY">
                                                                    <label class="did-floating-label">City</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("00000"))" @bind-Value="@modelAddNewAgent.OWNERZIP_CODE" Label="Zipcode" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                                                                @* <div class="did-floating-label-content">
                                                                <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.OWNERZIP_CODE"  placeholder="  "  @ref="@E_OWNERZIP_CODE" style="background-color:@C_OWNERZIP_CODE"  >
                                                                <label class="did-floating-label" >Zipcode</label>
                                                                </div>*@
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("000-000-0000"))" @bind-Value="@modelAddNewAgent.OwnerPhone" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                                                                @* <div class="did-floating-label-content">
                                                                <input type="text" class="form-control phone-mask" id="floatingInput"  @bind="@modelAddNewAgent.OwnerPhone"  placeholder="  "  @ref="@E_OwnerPhone" style="background-color:@C_OwnerPhone"  >
                                                                <label class="did-floating-label" >Phone</label>
                                                                </div>*@
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.ID" placeholder="  " @ref="@E_ID" style="background-color:@C_ID">
                                                                    <label class="did-floating-label">ID</label>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                <div class="did-floating-label-content">
                                                                    <MudDatePicker Label="Expiration" @bind-Date="modelAddNewAgent.OWNEREXPIRECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" />

                                                                    @*  <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.OWNEREXPIRE"  placeholder="  "    >
                                                                    <label class="did-floating-label" >Expiration</label> *@
                                                                </div>
                                                            </div>
                                                            <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                <MudTextField Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelAddNewAgent.SS" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                @*
                                                                <div class="did-floating-label-content">
                                                                <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.SS"  placeholder="  "  @ref="@E_SS" style="background-color:@C_SS"  >
                                                                <label class="did-floating-label" >SSN</label>
                                                                </div>*@
                                                            </div>
                                                        </div>
                                                    </section>
                                                </div>
                                            </div>
                                            <div>
                                            </div>
                                           
                                             <div class="row" style="padding-top:10px!important">
                                                <div class="card">
                                                    <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                        <section class="ss-panel-new1">
                                                            <span class="ss-header-new">Owner 2 Information</span>
                                                            <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.FIRSTNAME2" placeholder="  " @ref="@E_FIRSTNAME2" style="background-color:@C_FIRSTNAME2">
                                                                        <label class="did-floating-label">First Name</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.MIDDLENAME2" placeholder="  " @ref="@E_MIDDLENAME2" style="background-color:@C_MIDDLENAME2">
                                                                        <label class="did-floating-label">Middle Name</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.LASTNAME2" placeholder="  " @ref="@E_LASTNAME2" style="background-color:@C_LASTNAME2">
                                                                        <label class="did-floating-label">Last Name</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-8" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.OWNERADDRESS1" placeholder="  " @ref="@E_OWNERADDRESS1" style="background-color:@C_OWNERADDRESS1">
                                                                        <label class="did-floating-label">Address</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <select class="did-floating-input" value="@modelAddNewAgent.OwnerCountry1" @onchange="ChangeOwner1Country" placeholder="  " @ref="@E_OwnerCountry1" style="background-color:@C_OwnerCountry1;text-transform: uppercase!important">
                                                                            @foreach (var country in CountryList)
                                                                            {
                                                                                    <option value="@country.CountryCode">@country.CountryName</option>
                                                                            }
                                                                        </select>
                                                                        <label class="did-floating-label">Country</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <select class="did-floating-input" @bind="@modelAddNewAgent.OWNERSTATE1" placeholder="  " @ref="@E_OWNERSTATE1" style="background-color:@C_OWNERSTATE1;text-transform: uppercase!important">
                                                                            @foreach (var state in StateOwner1List)
                                                                            {
                                                                                    <option value="@state.StateCode">@state.StateName</option>
                                                                            }
                                                                        </select>
                                                                        <label class="did-floating-label">State</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.OWNERCITY1" placeholder="  " @ref="@E_OWNERCITY1" style="background-color:@C_OWNERCITY1">
                                                                        <label class="did-floating-label">City</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                    <MudTextField Mask="@(new PatternMask("00000"))" @bind-Value="@modelAddNewAgent.OWNERZIP_CODE1" Label="Zipcode" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                                                                    @*  <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.OWNERZIP_CODE1"  placeholder="  "  @ref="@E_OWNERZIP_CODE1" style="background-color:@C_OWNERZIP_CODE1"  >
                                                                    <label class="did-floating-label" >Zipcode</label>
                                                                    </div>*@
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                    <MudTextField Mask="@(new PatternMask("000-000-0000"))" @bind-Value="@modelAddNewAgent.OwnerPhone1" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                    @*
                                                                    <div class="did-floating-label-content">
                                                                    <input type="text" class="form-control phone-mask" id="floatingInput"  @bind="@modelAddNewAgent.OwnerPhone1"  placeholder="  "  @ref="@E_OwnerPhone1" style="background-color:@C_OwnerPhone1"  >
                                                                    <label class="did-floating-label" >Phone</label>
                                                                    </div>*@
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.ID1" placeholder="  " @ref="@E_ID1" style="background-color:@C_ID1">
                                                                        <label class="did-floating-label">ID</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    @*                                                         <div class="did-floating-label-content"> *@
                                                                    <MudDatePicker Label="Expiration" @bind-Date="modelAddNewAgent.OWNEREXPIRE1Con"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" />
                                                                    @*                                              <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.OWNEREXPIRE1"  placeholder="  ">
                                                                    <label class="did-floating-label" >Expiration</label>
                                                                    </div> *@
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                    <MudTextField Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelAddNewAgent.SS1" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                    @* <div class="did-floating-label-content">
                                                                    <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelAddNewAgent.SS1"  placeholder="  "  @ref="@E_SS1" style="background-color:@C_SS1"  >
                                                                    <label class="did-floating-label" >SSN</label>
                                                                    </div>*@
                                                                </div>
                                                            </div>
                                                        </section>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" style="padding-top:10px!important">
                                                <div class="card">
                                                    <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                        <section class="ss-panel-new1">
                                                            <span class="ss-header-new">Owner 3 Information</span>
                                                            <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.FIRSTNAME3" placeholder="  " style="background-color:@C_FIRSTNAME2">
                                                                        <label class="did-floating-label">First Name</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.MIDDLENAME3" placeholder="  " style="background-color:@C_MIDDLENAME2">
                                                                        <label class="did-floating-label">Middle Name</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.LASTNAME3" placeholder="  " style="background-color:@C_LASTNAME2">
                                                                        <label class="did-floating-label">Last Name</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-8" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.OWNERADDRESS3" placeholder="  " style="background-color:@C_OWNERADDRESS1">
                                                                        <label class="did-floating-label">Address</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <select class="did-floating-input" value="@modelAddNewAgent.OwnerCountry3" @onchange="ChangeOwner3Country" placeholder="  " style="background-color:@C_OwnerCountry1;text-transform: uppercase!important">
                                                                            @foreach (var country in CountryList)
                                                                            {
                                                                                <option value="@country.CountryCode">@country.CountryName</option>
                                                                            }
                                                                        </select>
                                                                        <label class="did-floating-label">Country</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <select class="did-floating-input" @bind="@modelAddNewAgent.OWNERSTATE3" placeholder="  " style="background-color:@C_OWNERSTATE1;text-transform: uppercase!important">
                                                                            @foreach (var state in StateOwner3List)
                                                                            {
                                                                                <option value="@state.StateCode">@state.StateName</option>
                                                                            }
                                                                        </select>
                                                                        <label class="did-floating-label">State</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.OWNERCITY3" placeholder="  " @ref="@E_OWNERCITY1" style="background-color:@C_OWNERCITY1">
                                                                        <label class="did-floating-label">City</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                    <MudTextField Mask="@(new PatternMask("00000"))" @bind-Value="@modelAddNewAgent.OWNERZIP_CODE3" Label="Zipcode" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                                                                </div>
                                                                <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                    <MudTextField Mask="@(new PatternMask("000-000-0000"))" @bind-Value="@modelAddNewAgent.OwnerPhone3" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <div class="did-floating-label-content">
                                                                        <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.ID3" placeholder="  ">
                                                                        <label class="did-floating-label">ID</label>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-4" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                                    <MudDatePicker Label="Expiration" @bind-Date="modelAddNewAgent.OWNEREXPIRE3Con" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" />

                                                                </div>
                                                                <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                                    <MudTextField Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelAddNewAgent.SS3" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                                </div>
                                                            </div>
                                                        </section>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" style="padding-top:10px!important">
                                                <div class="col-md-6" style="padding-left:0px;padding-right: 5px">
                                                    <div class="card">
                                                        <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                            <section class="ss-panel-new1">
                                                                <span class="ss-header-new">Country for Sending</span>
                                                                <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                                    <div class="card-datatable dataTable_select table-responsive" style="padding-bottom: 0px!important;padding-top: 5px!important;">
                                                                        <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" style="border-color: #f3f4f4!important;">
                                                                            <thead>
                                                                                <tr>

                                                                                    <th>No</th>
                                                                                    <th>
                                                                                        <div class="d-flex flex-column">
                                                                                            <span class="emp_name text-truncate">Country</span>
                                                                                        </div>
                                                                                    </th>
                                                                                    <th>
                                                                                        <div class="d-flex flex-column">
                                                                                            <span class="emp_name text-truncate">Show</span>
                                                                                        </div>
                                                                                    </th>

                                                                                </tr>
                                                                            </thead>
                                                                            <tbody>
                                                                                @if (CountryAgentSendAdd.Count > 0)
                                                                                {
                                                                                    @foreach (var item in CountryAgentSendAdd)
                                                                                    {
                                                                                        <tr>

                                                                                            <td>@item.RowNumber</td>
                                                                                            <td>
                                                                                                <div class="d-flex flex-column">
                                                                                                    <span class="emp_name text-truncate">
                                                                                                        @item.CountryName
                                                                                                    </span>
                                                                                                </div>
                                                                                            </td>
                                                                                            <td style="text-align:center!important">

                                                                                                <input type="checkbox" checked="@item.hidden"
                                                                                                @onchange="eventArgs => { CheckboxSendClicked(item, eventArgs.Value); }" />

                                                                                            </td>

                                                                                        </tr>
                                                                                    }
                                                                                }
                                                                            </tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                            </section>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6" style="padding-left:5px;padding-right: 0px">
                                                    <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                        <section class="ss-panel-new1">
                                                            <span class="ss-header-new">Country for Receiving</span>
                                                            <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                                <div class="card-datatable dataTable_select table-responsive" style="padding-bottom: 0px!important;padding-top: 5px!important;">
                                                                    <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" style="border-color: #f3f4f4!important;">
                                                                        <thead>
                                                                            <tr>

                                                                                <th>No</th>
                                                                                <th>
                                                                                    <div class="d-flex flex-column">
                                                                                        <span class="emp_name text-truncate">Country</span>
                                                                                    </div>
                                                                                </th>
                                                                                <th>
                                                                                    <div class="d-flex flex-column">
                                                                                        <span class="emp_name text-truncate">Show</span>
                                                                                    </div>
                                                                                </th>
                                                                                <th>
                                                                                    <div class="d-flex flex-column">
                                                                                        <span class="emp_name text-truncate">Default</span>
                                                                                    </div>
                                                                                </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            @if (CountryAgentReceiveAdd.Count > 0)
                                                                            {
                                                                                @foreach (var item in CountryAgentReceiveAdd)
                                                                                {
                                                                                    <tr>
                                                                                        <td>@item.RowNumber</td>
                                                                                        <td>
                                                                                            <div class="d-flex flex-column">
                                                                                                <span class="emp_name text-truncate">
                                                                                                    @item.CountryName
                                                                                                </span>
                                                                                            </div>
                                                                                        </td>
                                                                                        <td style="text-align:center!important">
                                                                                            <input type="checkbox" checked="@item.hidden"
                                                                                            @onchange="eventArgs => { CheckboxReceiveClicked(item, eventArgs.Value); }" />
                                                                                        </td>
                                                                                        <td style="text-align:center!important">
                                                                                            <input type="checkbox" checked="@item.MatDinh"
                                                                                            @onchange="eventArgs => { CheckboxReceiveDefaultClicked(item, eventArgs.Value); }" />
                                                                                        </td>
                                                                                    </tr>
                                                                                }
                                                                            }
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </div>
                                                        </section>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*   hien che cho add user 04072025*@
                                   @* <div class="row" style="padding-top:10px!important">
                                        <div class="card">
                                            <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                <section class="ss-panel-new1">
                                                    <span class="ss-header-new">User Information</span>
                                                    <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                                                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <div class="did-floating-label-content">
                                                                <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelAddNewAgent.UserName" placeholder="  " @ref="@E_UserName" style="background-color:@C_UserName" autocomplete="new-password">
                                                                <label class="did-floating-label">User Name</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <div class="did-floating-label-content">
                                                                <input class="did-floating-input" id="floatingInput" type="password" @bind="@modelAddNewAgent.Password" placeholder="  " @ref="@E_Password" style="background-color:@C_Password" autocomplete="new-password">
                                                                <label class="did-floating-label">Password</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <div class="did-floating-label-content">
                                                                <input class="did-floating-input" id="floatingInput" type="password" @bind="@modelAddNewAgent.Repassword" placeholder="  " @ref="@E_Repassword" style="background-color:@C_Repassword" autocomplete="new-password">
                                                                <label class="did-floating-label">Re Password</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </section>
                                            </div>
                                        </div>
                                    </div> *@
                                </div>


                            </EditForm>
                        </div>

                    </div>
                    <div class="row" style="margin-left:0px!important;margin-right:0px!important">
                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                        </div>
                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                            <button type="button" class="btn btn-primary" @onclick="AddNew" disabled="@isAddNew" style="width: 45% !important">
                                @if (isAddNew)
                                {
                                    <span class="spinner-border spinner-border-sm mr-1"></span>
                                }
                                <i class="bx bx-plus bx-xs me-1"></i>
                                Add New
                            </button>

                            <button type="button" class="btn btn-warning" @onclick="CloseAddNewModel" style="width: 45% !important">
                                Exit
                            </button>
                        </div>
                    </div>
                </div>
            </MudContainer>
        </DialogContent>
    </MudDialog>

    <MudDialog @bind-IsVisible="@isEditAgent" Options="dialogOptionsEdit" Style="overflow-y: scroll;height:90%!important">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Class="mr-3" /> Edit Agent Profile
            </MudText>

        </TitleContent>
        <DialogContent>
            <MudContainer  Class="mud-container-maxwidth"  Style="padding-left:0px!important;padding-right:0px!important">
                <MudTabs Outlined="true" @bind-ActivePanelIndex="activeIndex">
                    <MudTabPanel Text="Edit Agent" Icon="@Icons.Material.Filled.SettingsApplications">
                        <div class="row">
                            <div class="col-md-6" style="padding-right: 20px">
                                <div class="row">
                                    <div class="card">
                                        <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                            <section class="ss-panel-new1">
                                                <span class="ss-header-new">Agent Information</span>
                                                <div class="row"  style="margin-left:0px!important;margin-right:0px!important">
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.AGENT_ID" disabled  placeholder="  ">
                                                            <label class="did-floating-label" >Agent ID</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.AGENT_NAME" disabled=@isViewEditAgent placeholder="  ">
                                                            <label class="did-floating-label" >Agent Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.LEGAL_NAME" disabled=@isViewEditAgent placeholder="  ">
                                                            <label class="did-floating-label" >Agent Legal Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.DBA" disabled=@isViewEditAgent placeholder="  ">
                                                            <label class="did-floating-label" >DBA</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.ADDRESS" disabled=@isViewEditAgent placeholder="  ">
                                                            <label class="did-floating-label" >Address</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input" value="@modelEditAgent.COUNTRY" @onchange="ChangeEditCountry" disabled=@isViewEditAgent placeholder="  ">
                                                                @foreach (var country in CountryList)
                                                                {
                                                                    <option value="@country.CountryCode">@country.CountryName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >Country</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"   @bind="@modelEditAgent.STATE"   disabled=@isViewEditAgent  placeholder="  ">
                                                                @foreach (var state in SendStateList)
                                                                {
                                                                    <option value="@state.StateCode">@state.StateName</option>}
                                                            </select>
                                                            <label class="did-floating-label" >State</label>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.CITY"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >City</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("00000"))"  @bind-Value="@modelEditAgent.ZIP_CODE"  Label="Zipcode" Variant="Variant.Outlined" disabled=@isViewEditAgent  Margin="Margin.Dense"></MudTextField>
                                                        @* <div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.ZIP_CODE"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Zipcode</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-000-0000"))"  @bind-Value="@modelEditAgent.PHONE" disabled=@isViewEditAgent   Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                        @*@*
                                                    <div class="did-floating-label-content">
                                                        <input type="text" class="form-control phone-mask" id="floatingInput"  @bind="@modelEditAgent.PHONE"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Phone</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.FAX"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Fax</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.EMAIL"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Email</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.LOCATION"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Location</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.BUSINESS_TYPE"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Business Type</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input" value="@modelEditAgent.BUSINESS_STRUCT" @onchange="ChangeBusinessEdit" placeholder="  "  disabled=@isViewEditAgent  >
                                                                @foreach (var item in businessList)
                                                                {
                                                                    <option value="@item.IDType">@item.IDName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label">Business Struct</label>
                                                        </div>


                                                        @*   <div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.BUSINESS_STRUCT"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Business Struct</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-6"></div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.STATEFILE"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Secretary of State File #</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">

                                                        <MudDatePicker Label="Expiration Date" @bind-Date="modelEditAgent.EXPIRECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" Disabled=@isViewEditAgent />

                                                        @*  <div class="did-floating-label-content">
                                                    <input type="Date" class="did-floating-input" id="floatingInput" @bind="@modelEditAgent.EXPIRE" disabled=@isViewEditAgent placeholder="  ">
                                                        <label class="did-floating-label" >Expiration Date</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelEditAgent.LICENSE_NO" disabled=@isViewEditAgent placeholder="  ">
                                                            <label class="did-floating-label" >City Business License #	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">

                                                        <MudDatePicker Label="Expiration Date" @bind-Date="modelEditAgent.EXPIRE1Con"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" Disabled=@isViewEditAgent />
                                                        @*  <div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.EXPIRE1"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Expiration Date</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000000000"))" @bind-Value="@modelEditAgent.EIN" Label="EIN#/SS#" Variant="Variant.Outlined" Margin="Margin.Dense"  disabled=@isViewEditAgent ></MudTextField>
                                                        @*   <div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.EIN"    placeholder="  ">
                                                        <label class="did-floating-label" >EIN#/SS#</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"  @bind="@modelEditAgent.TYPE_AGENT" placeholder="  " @ref="@E_AGENT_TYPE" style="background-color:@C_AGENT_TYPE" disabled=@isViewEditAgent>
                                                                @if (UserTypeLists.Count > 0)
                                                                {
                                                                    @foreach (var t in UserTypeLists)
                                                                    {
                                                                        <option value="@t.TYPE_AGENT">@t.TYPE_AGENTNAME</option>
                                                                    }
                                                                }
                                                            </select>
                                                            @*<input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.AGENT_TYPE"  disabled=@isViewEditAgent  placeholder="  ">*@
                                                            <label class="did-floating-label" >Agent Type</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="Start Date" @bind-Date="modelEditAgent.DATE_CREATECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Disabled=@isViewEditAgent Editable="true" />


                                                        @*     <div class="did-floating-label-content">
                                                        <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.DATE_CREATE"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Start Date</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="End Date" @bind-Date="modelEditAgent.DATE_STOPCon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined"  Disabled=@isViewEditAgent Editable="true" />
                                                        @*  <div class="did-floating-label-content">
                                                        <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.DATE_STOP"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >End Date</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <span class="emp_name text-truncate">
                                                            <input type="checkbox" checked="@modelEditAgent.payment"
                                                            @onchange="eventArgs => { CheckEditPaymentClicked(eventArgs.Value); }" />
                                                        </span>Domestic

                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.COMPLIANCE_OFFICER"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Compliance Officer</label>
                                                        </div>
                                                    </div>
                                                     <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.CID"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >ID</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="Expiration" @bind-Date="modelEditAgent.CEXPIREDATECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" Disabled=@isViewEditAgent />
                                                                                                         
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelEditAgent.CSS" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.PAYMENT_METHOD"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Payment Method</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.BANK_TYPE"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Bank Type	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.BANK_NAME"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Bank Name	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.BANK_ADDRESS"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Bank Address	</label>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.BEGIN_BALANCE"   disabled=@isViewEditAgent     placeholder="  "  >
                                                            <label class="did-floating-label" >Begining Balance</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.CREDIT_LINEAPP" @onchange="EditCREDIT_LINEAPPChange"     disabled=@isViewEditAgent    placeholder="  "  >
                                                            <label class="did-floating-label" >Max Credit Line</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.CREDIT_LINE"   @onchange="EditCREDIT_LINEChange"   disabled=@isViewEditAgent     placeholder="  "  >
                                                            <label class="did-floating-label" >Credit Line</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.HighRiskExposures" @onchange="EditHighRiskExposuresChange"    disabled=@isViewEditAgent     placeholder="  "  >
                                                            <label class="did-floating-label" >High Risk Exposures	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.Destination"  @onchange="EditDestinationChange"     disabled=@isViewEditAgent     placeholder="  "  >
                                                            <label class="did-floating-label" >Destination	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.HIFCA"   @onchange="EditHIFCAChange"     disabled=@isViewEditAgent    placeholder="  "  >
                                                            <label class="did-floating-label" >HIFCA	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.HIDTA"   @onchange="EditHIDTAChange"     disabled=@isViewEditAgent    placeholder="  "  >
                                                            <label class="did-floating-label" >HIDTA	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <span class="emp_name text-truncate">
                                                            <input type="checkbox" checked="@modelEditAgent.Bond"
                                                            @onchange="eventArgs => { CheckEditBondClicked(eventArgs.Value); }" />
                                                        </span>Bond

                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="number" class="did-floating-input" id="floatingInput" value="@modelEditAgent.BondAmount" @onchange="EditBondAmountChange" disabled=@isViewEditAgent placeholder="  ">
                                                            <label class="did-floating-label" >Bond Amount	</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"  @bind="@modelEditAgent.STATUS" placeholder="  "  disabled=@isViewEditAgent >
                                                                @if (TypeofStatusListEdit.Count > 0)
                                                                {
                                                                    @foreach (var t in TypeofStatusListEdit)
                                                                    {
                                                                        <option value="@t.StatusID">@t.StatusName</option>
                                                                    }
                                                                }
                                                            </select>

                                                            <label class="did-floating-label" >Status</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important"/>
                                                    <div class="col-md-6" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">

                                                        <div class="did-floating-label-content">
                                                            <textarea class="did-floating-input" id="exampleFormControlTextarea1" style="PADDING-TOP: 8px!important;height:90px!important;width:100%!important" autocomplete="off" @bind="@modelEditAgent.REASONFORBLOCK" placeholder="  " disabled=@isViewEditAgent></textarea>
                                                            <label class="did-floating-label">Reason for Block</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">

                                                        <div class="did-floating-label-content">
                                                            <textarea class="did-floating-input" id="exampleFormControlTextarea1" style="PADDING-TOP: 8px!important;height:90px!important;width:100%!important" autocomplete="off" @bind="@modelEditAgent.COMMENT_UPDATE" placeholder="  "  disabled=@isViewEditAgent ></textarea>
                                                            <label class="did-floating-label">Reason for Update</label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </section>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="card">
                                        <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                            <section class="ss-panel-new1">
                                                <span class="ss-header-new">Owner 1 Information</span>
                                                <div class="row"  style="margin-left:0px!important;margin-right:0px!important">
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.FIRSTNAME"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >First Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.MIDDLENAME"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Middle Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.LASTNAME"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Last Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-8" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERADDRESS"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Address</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"   value="@modelEditAgent.OwnerCountry"  @onchange="ChangeEditOwnerCountry"   disabled=@isViewEditAgent   placeholder="  "  >

                                                                @foreach (var country in CountryList)
                                                                {
                                                                    <option value="@country.CountryCode">@country.CountryName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >Country</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"   @bind="@modelEditAgent.OWNERSTATE"   disabled=@isViewEditAgent  placeholder="  ">
                                                                @foreach (var state in StateOwnerList)
                                                                {
                                                                    <option value="@state.StateCode">@state.StateName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >State</label>
                                                        </div>
                                                    </div>


                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERCITY"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >City</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("00000"))"  @bind-Value="@modelEditAgent.OWNERZIP_CODE" Label="Zipcode" Variant="Variant.Outlined" disabled=@isViewEditAgent  Margin="Margin.Dense"></MudTextField>

                                                        @*  <div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERZIP_CODE"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Zipcode</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-000-0000"))"  @bind-Value="@modelEditAgent.OwnerPhone" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                        @* <div class="did-floating-label-content">
                                                        <input type="text" class="form-control phone-mask" id="floatingInput"  @bind="@modelEditAgent.OwnerPhone"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Phone</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.ID"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >ID</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="Expiration" @bind-Date="modelEditAgent.OWNEREXPIRECon"  Mask="@(new DateMask("MM/dd/yyyy"))"  DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" Disabled=@isViewEditAgent />
                                                        @* <div class="did-floating-label-content">
                                                        <input type="Date" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNEREXPIRE"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Expiration</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelEditAgent.SS" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

                                                        @*<div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.SS"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >SSN</label>
                                                    </div>*@
                                                    </div>
                                                </div>
                                            </section>
                                        </div>
                                    </div>

                                    <div class="card">
                                        <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                            <section class="ss-panel-new1">
                                                <span class="ss-header-new">Owner 2 Information</span>
                                                <div class="row"  style="margin-left:0px!important;margin-right:0px!important">
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.FIRSTNAME2" disabled=@isViewEditAgent   placeholder="  ">
                                                            <label class="did-floating-label" >First Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.MIDDLENAME2"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Middle Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.LASTNAME2"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Last Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-8" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERADDRESS1"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Address</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input" value="@modelEditAgent.OwnerCountry1" @onchange="ChangeEditOwner1Country" disabled=@isViewEditAgent placeholder="  ">
                                                                @foreach (var country in CountryList)
                                                                {
                                                                    <option value="@country.CountryCode">@country.CountryName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >Country</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"   @bind="@modelEditAgent.OWNERSTATE1"   disabled=@isViewEditAgent  placeholder="  ">
                                                                @foreach (var state in StateOwner1List)
                                                                {
                                                                    <option value="@state.StateCode">@state.StateName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >State</label>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERCITY1"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >City</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("00000"))"  @bind-Value="@modelEditAgent.OWNERZIP_CODE1" Label="Zipcode" Variant="Variant.Outlined" disabled=@isViewEditAgent  Margin="Margin.Dense"></MudTextField>

                                                        @*  <div class="did-floating-label-content">
                                                        <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERZIP_CODE1"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Zipcode</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-000-0000"))"  @bind-Value="@modelEditAgent.OwnerPhone1" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                        @*  <div class="did-floating-label-content">
                                                        <input type="text" class="form-control phone-mask" id="floatingInput"  @bind="@modelEditAgent.OwnerPhone1"  disabled=@isViewEditAgent  placeholder="  ">
                                                        <label class="did-floating-label" >Phone</label>
                                                    </div>*@
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.ID1"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >ID</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="Expiration" @bind-Date="modelEditAgent.OWNEREXPIRE1Con" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" Disabled=@isViewEditAgent />
                                                        @*  <div class="did-floating-label-content">
                                                    <input type="Date" class="did-floating-input" id="floatingInput" @bind="@modelEditAgent.OWNEREXPIRE1" disabled=@isViewEditAgent placeholder="  ">
                                                        <label class="did-floating-label" >Expiration</label>
                                                    </div> *@
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelEditAgent.SS1" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                    </div>
                                                </div>
                                            </section>
                                        </div>
                                    </div>
                                      <div class="card">
                                        <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                            <section class="ss-panel-new1">
                                                <span class="ss-header-new">Owner 3 Information</span>
                                                <div class="row"  style="margin-left:0px!important;margin-right:0px!important">
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.FIRSTNAME3" disabled=@isViewEditAgent   placeholder="  ">
                                                            <label class="did-floating-label" >First Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.MIDDLENAME3"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Middle Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.LASTNAME3"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Last Name</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-8" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERADDRESS3"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >Address</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"   value="@modelEditAgent.OwnerCountry3"  @onchange="ChangeEditOwner3Country"  disabled=@isViewEditAgent    placeholder="  "  >
                                                                @foreach (var country in CountryList)
                                                                {
                                                                    <option value="@country.CountryCode">@country.CountryName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >Country</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <select class="did-floating-input"   @bind="@modelEditAgent.OWNERSTATE3"   disabled=@isViewEditAgent  placeholder="  ">
                                                                @foreach (var state in StateOwner3List)
                                                                {
                                                                    <option value="@state.StateCode">@state.StateName</option>
                                                                }
                                                            </select>
                                                            <label class="did-floating-label" >State</label>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.OWNERCITY3"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >City</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("00000"))"  @bind-Value="@modelEditAgent.OWNERZIP_CODE3" Label="Zipcode" Variant="Variant.Outlined" disabled=@isViewEditAgent  Margin="Margin.Dense"></MudTextField>

                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-000-0000"))"  @bind-Value="@modelEditAgent.OwnerPhone3" Label="Phone" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                       
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <div class="did-floating-label-content">
                                                            <input type="text" class="did-floating-input" id="floatingInput"  @bind="@modelEditAgent.ID3"  disabled=@isViewEditAgent  placeholder="  ">
                                                            <label class="did-floating-label" >ID</label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:2px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                        <MudDatePicker Label="Expiration" @bind-Date="modelEditAgent.OWNEREXPIRE3Con" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Editable="true" Disabled=@isViewEditAgent />
                                                       
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:5px!important;padding-left:5px!important;padding-right:5px!important">
                                                        <MudTextField  Mask="@(new PatternMask("000-00-0000"))" @bind-Value="@modelEditAgent.SS3" Label="SSN" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                                    </div>
                                                </div>
                                            </section>
                                        </div>
                                    </div>
                                    <div class="col-md-6"  style="padding-top:10px!important;padding-left:0px;padding-right: 5px">
                                        <div class="card">
                                            <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                <section class="ss-panel-new1">
                                                    <span class="ss-header-new">Country for Sending</span>
                                                    <div class="row"  style="margin-left:0px!important;margin-right:0px!important">
                                                        <div class="card-datatable dataTable_select table-responsive" style="padding-bottom: 0px!important;padding-top: 5px!important;">
                                                            <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" style="border-color: #f3f4f4!important;">
                                                                <thead>
                                                                    <tr>

                                                                        <th>No</th>
                                                                        <th><div class="d-flex flex-column">
                                                                                <span class="emp_name text-truncate">Country</span></div></th>
                                                                        <th><div class="d-flex flex-column">
                                                                                <span class="emp_name text-truncate">Show</span></div></th>


                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @if(CountryAgentSendEdit.Count>0)
                                                                    {
                                                                        @foreach (var item in CountryAgentSendEdit)
                                                                        {
                                                                            <tr>

                                                                                <td>@item.RowNumber</td>
                                                                                <td>                                        
                                                                                    <div class="d-flex flex-column">
                                                                                        <span class="emp_name text-truncate">
                                                                                            @item.CountryName</span>
                                                                                    </div>
                                                                                </td>
                                                                                <td style="text-align:center!important">                                   

                                                                                    <input type="checkbox" checked="@item.hidden"
                                                                                    @onchange="eventArgs => { CheckboxEditSendClicked(item, eventArgs.Value); }" />

                                                                                </td>

                                                                            </tr>
                                                                        }
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </section>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6"  style="padding-top:10px!important;padding-left:5px;padding-right: 0px">
                                        <div class="card">
                                            <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                                <section class="ss-panel-new1">
                                                    <span class="ss-header-new">Country for Receiving</span>
                                                    <div class="row"  style="margin-left:0px!important;margin-right:0px!important">
                                                        <div class="card-datatable dataTable_select table-responsive" style="padding-bottom: 0px!important;padding-top: 5px!important;">
                                                            <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" style="border-color: #f3f4f4!important;">
                                                                <thead>
                                                                    <tr>

                                                                        <th>No</th>
                                                                        <th><div class="d-flex flex-column">
                                                                                <span class="emp_name text-truncate">Country</span></div></th>
                                                                        <th><div class="d-flex flex-column">
                                                                                <span class="emp_name text-truncate">Show</span></div></th>
                                                                        <th>
                                                                            <div class="d-flex flex-column">
                                                                                <span class="emp_name text-truncate">Default</span>
                                                                            </div>
                                                                        </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @if(CountryAgentReceiveEdit.Count>0)
                                                                    {
                                                                        @foreach (var item in CountryAgentReceiveEdit)
                                                                        {
                                                                            <tr>                                      
                                                                                <td>@item.RowNumber</td>
                                                                                <td>                                        
                                                                                    <div class="d-flex flex-column">
                                                                                        <span class="emp_name text-truncate">
                                                                                            @item.CountryName</span>
                                                                                    </div>
                                                                                </td>
                                                                                <td style="text-align:center!important">  
                                                                                    <input type="checkbox" checked="@item.hidden"
                                                                                    @onchange="eventArgs => { CheckboxEditReceiveClicked(item, eventArgs.Value); }" />

                                                                                </td>
                                                                                <td style="text-align:center!important">
                                                                                    <input type="checkbox" checked="@item.MatDinh"
                                                                                    @onchange="eventArgs => { CheckboxEditReceiveDefaultClicked(item, eventArgs.Value); }" />

                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }

                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </section>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div> </div>
                        <div class="row" style="padding-top:10px!important">
                            <div class="col-3">
                            </div>
                            <div class="col-md-6" style="padding-top:10px!important;padding-left:3px!important;padding-right:3px!important">
                                <button type="button" class="btn btn-primary" @onclick="EditAgentReport"  style="width:150px!important">                       
                                    Edit
                                </button>
                                <button type="button" class="btn btn-primary" @onclick="UpdateAgent" disabled="@isUpdate"   style="width: 150px !important">
                                    @if (isUpdate)
                                    {
                                        <span class="spinner-border spinner-border-sm mr-1"></span>}
                                    <i class="fas fa-edit" />
                                    Update
                                </button>

                                <button type="button" class="btn btn-warning" @onclick="CloseEditModel" style="width: 150px !important">
                                    Exit
                                </button>
                            </div>
                        </div>
                    </MudTabPanel>
                    <MudTabPanel Text="Agent Documents" >
                        <form>
                            @if (IsViewDelete)
                            {
                                <div class="modal fade show" id="editModalDelete" tabindex="-1" style="display:flex;padding-top:3rem!important" aria-modal="true" role="dialog" @onkeydown="CloseDelete">
                                    <div class="modal-dialog" role="document" style="max-width:80%!important">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Confirm Delete</h5>

                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="CloseDelete">
                                                    <span aria-hidden="true" style="font-size: xx-large;">&times;</span>
                                                </button>
                                            </div>
                                            <div class="row"  style="padding:20px!important">
                                                <div class="col-12" style="text-align:center!important">
                                                    Do you want to delete this File???
                                                </div>   

                                            </div>    o
                                            <div class="row" style="padding-bottom:40px!important">

                                                <div class="col-md-12" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                    <button type="button" class="btn btn-danger" @onclick="ConfirmDeleteFile"  style="width:150px!important">

                                                        Delete
                                                    </button>
                                                    <button type="button" class="btn btn-primary" @onclick="NotConfirmDeleteFile" style="width:150px!important">

                                                        Cancel
                                                    </button>

                                                </div>   
                                            </div> 
                                        </div>  
                                    </div>       
                                </div>   
                            }
                            <div class="row">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-header-new" style="padding:15px 5px 5px 5px!important">
                                            <section class="ss-panel-new1">
                                                <span class="ss-header-new">Upload file</span>
                                                <EditForm Model="@modelfile">
                                                    <div class="row g-1">

                                                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <div class="did-floating-label-content">
                                                                <input type="text" class="did-floating-input" id="floatingInput" @bind="@modelfile.FileName" placeholder="  "  @ref="@E_FileName" style="background-color:@C_FileName" >
                                                                <label class="did-floating-label" >File Name</label>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <InputFile OnChange="@LoadFiles" multiple  accept=".xls,.xlsx,.doc,.docx,.pdf,.jpg,.gif,.png" />
                                                        </div>
                                                        <div class="col-md-4" style="padding-top:8px!important;padding-left:5px!important;padding-right:5px!important;padding-bottom:2px!important">
                                                            <button type="button" class="btn btn-primary" @onclick="UploadFile" disabled="@isUploadFile"  style="width:200px!important" >
                                                                @if (isUploadFile)
                                                                {
                                                                    <span class="spinner-border spinner-border-sm mr-1"></span>}
                                                                Upload File
                                                            </button>
                                                        </div>
                                                    </div>
                                                </EditForm>
                                            </section>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-datatable dataTable_select nowrap table-responsive">
                                            <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" disabled=@isEditAgent  style="border-color: #f3f4f4!important;">
                                                <thead>
                                                    <tr>
                                                        <th>No.</th>
                                                        <th><div class="d-flex flex-column">
                                                                <span class="emp_name text-truncate">File Name</span></div></th>
                                                        <th>File</th>
                                                        <th>Download</th>
                                                        <th>Delete</th>

                                                        <th><div class="d-flex flex-column">
                                                                <span class="emp_name text-truncate">Created by </span></div></th>
                                                        <th><div class="d-flex flex-column">
                                                                <span class="emp_name text-truncate">Created Date</span></div></th>
                                                        <th><div class="d-flex flex-column">
                                                                <span class="emp_name text-truncate">Edited by </span></div></th>

                                                        <th><div class="d-flex flex-column">
                                                                <span class="emp_name text-truncate">Edited Date</span></div></th>
                                                    </tr>
                                                </thead>
                                                <tr>
                                                </tr>
                                                <tbody>
                                                    @if(SenderDocumentsList.Count>0)
                                                    {
                                                        @foreach (var item in SenderDocumentsList)
                                                        {

                                                            <tr>
                                                                <td>@item.RowNumber</td>
                                                                <td>@item.FileName1</td>
                                                                <td>@item.FileName</td>

                                                                <td style="text-align:center!important">
                                                                    @if(!String.IsNullOrEmpty(@item.FileName))
                                                                    {
                                                                        <button type="button" class="btn btn-link" @onclick="() => DownloadFileFromStreamNew(item.FileName,item.No)">
                                                                            <i class="bx bx-download mx-1"></i>
                                                                        </button>

                                                                    }

                                                                </td>
                                                                <td style="text-align:center!important">
                                                                    <button type="button" class="btn btn-link" @onclick="() => DeleteFile(item.No)">
                                                                        <i class="bx bx-trash"></i>
                                                                    </button>
                                                                </td>
                                                                <td>@item.CreateBy</td>
                                                                <td>@item.CreateDate</td>
                                                                <td>@item.EditBy</td>
                                                                <td>@item.EditDate</td>
                                                            </tr>
                                                        }
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </MudTabPanel>
                    <MudTabPanel Text="Agent History" >
                        <div class="row">
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-datatable dataTable_select nowrap table-responsive">
                                        <table id="basic-datatable" class="table-striped table table-bordered dt-select-table table table-bordered dataTable no-footer dt-checkboxes-select" disabled=@isEditAgent  style="border-color: #f3f4f4!important;">
                                            <thead>
                                                <tr>
                                                    <th>No.</th>

                                                    <th><div class="d-flex flex-column">
                                                            <span class="emp_name text-truncate">Reason for Edit</span></div></th>
                                                    <th><div class="d-flex flex-column">
                                                            <span class="emp_name text-truncate">Reason for Ending</span></div></th>
                                                    <th><div class="d-flex flex-column">
                                                            <span class="emp_name text-truncate">Action by</span></div></th>
                                                    <th><div class="d-flex flex-column">
                                                            <span class="emp_name text-truncate">Action Date</span></div></th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                                @if(AgentHistoryList.Count>0)
                                                {
                                                    @foreach (var item in AgentHistoryList)
                                                    {

                                                        <tr>
                                                            <td>@item.RowNumber</td>

                                                            <td>
                                                                <div class="d-flex justify-content-start align-items-center user-name">
                                                                    <div class="d-flex flex-column">
                                                                        <span class="emp_name text-truncate"> @item.AG_COMMENT</span>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="d-flex justify-content-start align-items-center user-name">
                                                                    <div class="d-flex flex-column">
                                                                        <span class="emp_name text-truncate"> @item.COMMENT</span>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="d-flex justify-content-start align-items-center user-name">
                                                                    <div class="d-flex flex-column">
                                                                        <span class="emp_name text-truncate"> @item.ActionBy</span>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <div class="d-flex justify-content-start align-items-center user-name">
                                                                    <div class="d-flex flex-column">
                                                                        <span class="emp_name text-truncate"> @item.ActionDate</span>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    }
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </MudTabPanel>
                </MudTabs>
            </MudContainer>
        </DialogContent>
    </MudDialog>
</div>
@code{
    public class UploadFileModel
    {
        public string?  UserID { get; set; } = "";
        public string?  AgentID { get; set; } = "";
        public List<CustomerProfileFile> SenderDocumentsLists { get; set; }= new List<CustomerProfileFile>() ;
    }
    List<pageSizeModel> pagesizeModels = new List<pageSizeModel>
    {
        new pageSizeModel { PageID = 10, PageName = "10" },
        new pageSizeModel { PageID = 20, PageName = "20" },
        new pageSizeModel { PageID = 50, PageName = "50" },
        new pageSizeModel { PageID = 100, PageName = "100" },
        new pageSizeModel { PageID = 200, PageName = "200" },
        new pageSizeModel { PageID = 500, PageName = "500" },
        new pageSizeModel { PageID = 1000, PageName = "1000" },
        new pageSizeModel { PageID = 2000, PageName = "2000" },
        new pageSizeModel { PageID = 5000, PageName = "5000" },
        new pageSizeModel { PageID = 500000, PageName = "All" }
    };
    public class ModelSearch
    {
        public string?  LEVEL_ACCESS { get; set; } = "";
        public string?  StatusID { get; set; } = "0";
        public string?  UserType { get; set; } = "0";
        public string?  AgentID { get; set; } = ""; 
        public string?  StateID { get; set; } = "";
        public string?  Search { get; set; } = "";
        public string?  CustID { get; set; } = "";
        public string?  B_CustID { get; set; } = "";
        public string?  UserID { get; set; } = "";
        public string?  Phone { get; set; } = "";
        public string?  Address { get; set; } = "";
        public string?  FullName { get; set; } = "";
        public string?  SSN { get; set; } = "";
        public string?  DriverID { get; set; } = "";
        public string?  ToCountry { get; set; } = "All";
        public string?  TypeofAgent { get; set; } = "0";
    }
    public class ModelUpfile
    {
        public string?  FileName { get; set; } = "";
    }
    string Noidung = "";
    bool viewSearch = false;

    private bool isAddNewAgent = false;
    private bool isEditAgent = false;
    private bool isView = false;
    private string isViewingSender = "None";
    private bool isViewingReport = false;
    private bool isViewingSelect = false;

    private bool isViewbutton = false;
    private bool isAddNew = false;
    private bool isUpdate = false;

    private ModelSearch model = new ModelSearch();

    private long maxFileSize = 1024 * 15 * 1024;
    private int maxAllowedFiles = 100;
    private bool isLoading;
    private bool isUploadFile=false;

    public List<IBrowserFile> loadedFiles = new();

    //public List<AgentFile> SenderDocumentsList { get; set; }
    private ModelUpfile modelfile = new ModelUpfile();
    public List<AgentFile> SenderDocumentsList { get; set; }= new List<AgentFile>(); 
    public List<AgentFile> SenderDocumentsList1 { get; set; }= new List<AgentFile>(); 
    public CustomerList modelEditCust = new CustomerList();
    public List<ReceiveCountryList> ReceiveCountryList { get; set; }= new List<ReceiveCountryList>();

    public List<AgentHistory> AgentHistoryList { get; set; }
    ReceiveCountryList ReceiveCountryLists { get; set; }
    private string ReceiveCountrylist { get; set; }



    public List<AgentList> AgentList { get; set; } = new List<AgentList>();
    AgentList AgentLists { get; set; }
    private string Agentlist { get; set; }

    public List<UserType> UserTypeLists { get; set; }= new List<UserType>();
    public List<UserType> UserTypeList { get; set; }
    UserType UserTypes { get; set; }
    private string UserType { get; set; }

    public List<TypeofStatusModel> TypeofStatusList { get; set; }= new List<TypeofStatusModel>();
    TypeofStatusModel TypeofStatuses { get; set; }
    private string TypeofStatus { get; set; }
    public List<TypeofStatusModel> TypeofStatusListEdit { get; set; } = new  List<TypeofStatusModel>();
    List<AccessLevel> AccessLevelList = new List<AccessLevel>();
    AccessLevel AccessLevels = new AccessLevel();
    private string LEVEL_ACCESS { get; set; }

    public List<StateList> StateList { get; set; } = new List<StateList>();
    StateList StateLists { get; set; }
    private string Statelist { get; set; }

    private AgentModel modelAddNewAgent = new AgentModel();
    private AgentModel modelEditAgent = new AgentModel();

    public List<AgentModel> AgentListModels { get; set; }
    public List<AgentModel> AgentEditModel { get; set; }
    public List<CountryAgent> CountryAgentSendAdd { get; set; }
    public List<CountryAgent> CountryAgentReceiveAdd { get; set; }
    public List<CountryAgent> CountryAgentSendEdit { get; set; }
    public List<CountryAgent> CountryAgentReceiveEdit { get; set; }
    public List<IDTypeList>  businessList { get; set; }= new List<IDTypeList>();
    SendCountryList SendCountryLists { get; set; }
    private string SendCountrylist { get; set; }
    string noidungpage = "";
    int totalPages;
    Int64 totalRecords;
    Int64 curPage;
    int pagerSize;
    Int64 pageSize;
    int startPage;
    int endPage;
    int firstPage;
    int lastPage;
    bool IsViewDelete = false;
    bool IsConfirmDelete = false;
    bool IsEditAgentSpin = false;

    public List<CustomerProfileFile> SenderDocumentsListDownload { get; set; } = new List<CustomerProfileFile>();
    bool isViewEditAgent = false;
    Int64 idDel = 0;
    public string?  C_FileName  { get; set; } = "white!important";
    public string?  C_AGENT_ID { get; set; } = "white!important";
    public string?  C_AGENT_NAME { get; set; } = "white!important";
    public string?  C_OWNER_NAME { get; set; } = "white!important";
    public string?  C_LEGAL_NAME { get; set; } = "white!important";
    public string?  C_DBA { get; set; } = "white!important";
    public string?  C_FIRSTNAME { get; set; } = "white!important";
    public string?  C_LASTNAME { get; set; } = "white!important";
    public string?  C_MIDDLENAME { get; set; } = "white!important";
    public string?  C_FULLNAME { get; set; } = "white!important";
    public string?  C_FULLADDRESS { get; set; }    = "white!important";     
    public string?  C_ADDRESS { get; set; } = "white!important";
    public string?  C_CITY { get; set; } = "white!important";
    public string?  C_STATE { get; set; } = "white!important";
    public string?  C_ZIP_CODE { get; set; } = "white!important";
    public string?  C_COUNTRY { get; set; } = "white!important";
    public string?  C_PHONE { get; set; } = "white!important";
    public string?  C_EMAIL { get; set; } = "white!important";
    public string?  C_FAX { get; set; } = "white!important";
    public string?  C_LICENSE_NO { get; set; } = "white!important";
    public string?  C_COMMENT { get; set; } = "white!important";
    public string?  C_CREDIT_LINE { get; set; } = "white!important";
    public string?  C_LAST_UPDATE { get; set; } = "white!important";
    public string?  C_UPDATE_BY { get; set; } = "white!important";
    public string?  C_COMMENT_UPDATE { get; set; } = "white!important";
    public string?  C_STATUS { get; set; } = "white!important";
    public string?  C_LOGO { get; set; } = "white!important";
    public string?  C_LEVEL_ACCESS { get; set; } = "white!important";
    public string?  C_DATE_CREATE { get; set; } = "white!important";
    public string?  C_DATE_STOP { get; set; } = "white!important";
    public string?  C_StatusName { get; set; } = "white!important";
    public string?  C_AGENT_TYPE { get; set; } = "white!important";
    public string?  C_EIN { get; set; } = "white!important";
    public string?  C_TYPE_AGENT { get; set; } = "white!important";
    public string?  C_BUSINESS_TYPE { get; set; } = "white!important";
    public string?  C_BUSINESS_STRUCT { get; set; } = "white!important";
    public string?  C_SENDING_COUNTRY { get; set; } = "white!important";
    public string?  C_TO_COUNTRY { get; set; } = "white!important";
    public string?  C_PAYMENTAGENT { get; set; } = "white!important";
    public string?  C_COMPLIANCE_OFFICER { get; set; } = "white!important";
    public string?  C_BANK_NAME { get; set; } = "white!important";
    public string?  C_BANK_ADDRESS { get; set; } = "white!important";
    public string?  C_BANK_TYPE { get; set; } = "white!important";
    public string?  C_REASONFORBLOCK { get; set; } = "white!important";
    public string?  C_TIN { get; set; } = "white!important";
    public string?  C_OWNER_NAME2 { get; set; } = "white!important";
    public string?  C_FIRSTNAME2 { get; set; } = "white!important";
    public string?  C_LASTNAME2 { get; set; } = "white!important";
    public string?  C_MIDDLENAME2 { get; set; } = "white!important";
    public string?  C_ID { get; set; } = "white!important";
    public string?  C_SS { get; set; } = "white!important";
    public string?  C_BUSINESS_LICENSE_TYPE { get; set; } = "white!important";
    public string?  C_OWNERADDRESS { get; set; } = "white!important";
    public string?  C_OWNERCITY { get; set; } = "white!important";
    public string?  C_OWNERSTATE { get; set; } = "white!important";
    public string?  C_OWNERZIP_CODE { get; set; } = "white!important";
    public string?  C_OWNERADDRESS1 { get; set; } = "white!important";
    public string?  C_OWNERCITY1 { get; set; } = "white!important";
    public string?  C_OWNERSTATE1 { get; set; } = "white!important";
    public string?  C_OWNERZIP_CODE1 { get; set; } = "white!important";
    public string?  C_ID1 { get; set; } = "white!important";
    public string?  C_SS1 { get; set; } = "white!important";
    public string?  C_EXPIREDATE { get; set; } = "white!important";
    public string?  C_OwnerCountry { get; set; } = "white!important";
    public string?  C_OwnerCountry1 { get; set; } = "white!important";
    public string?  C_LOCATION { get; set; } = "white!important";
    public string?  C_OwnerPhone { get; set; } = "white!important";
    public string?  C_OwnerPhone1 { get; set; } = "white!important";
    public string?  C_STATEFILE { get; set; } = "white!important";
    public string?  C_OWNEREXPIRE { get; set; } = "white!important";
    public string?  C_OWNEREXPIRE1 { get; set; } = "white!important";
    public string?  C_EXPIRE { get; set; } = "white!important";
    public string?  C_EXPIRE1 { get; set; } = "white!important";
    public string?  C_PAYMENT_METHOD { get; set; } = "white!important";
    public string?  C_CREDIT_LINEAPP { get; set; } = "white!important";
    public string?  C_BEGIN_BALANCE { get; set; } = "white!important";
    public string?  C_payment { get; set; } = "white!important";
    public string?  C_HighRiskExposures { get; set; } = "white!important";
    public string?  C_Destination { get; set; } = "white!important";
    public string?  C_HIFCA { get; set; } = "white!important";
    public string?  C_HIDTA { get; set; } = "white!important";
    public string?  C_Bond { get; set; } = "white!important";
    public string?  C_BondAmount { get; set; } = "white!important";
    public string?  C_datalatitude { get; set; } = "white!important";
    public string?  C_datalongitude { get; set; } = "white!important";
    public string?  C_UserName { get; set; } = "white!important";
    public string?  C_Password { get; set; } = "white!important";
    public string?  C_Repassword { get; set; } = "white!important";

    public ElementReference E_FileName;
    public ElementReference E_AGENT_ID ;
    public ElementReference E_AGENT_NAME ;
    public ElementReference E_OWNER_NAME ;
    public ElementReference E_LEGAL_NAME ;
    public ElementReference E_DBA ;
    public ElementReference E_FIRSTNAME ;
    public ElementReference E_LASTNAME ;
    public ElementReference E_MIDDLENAME ;
    public ElementReference E_FULLNAME ;
    public ElementReference E_FULLADDRESS;     
    public ElementReference E_ADDRESS ;
    public ElementReference E_CITY ;
    public ElementReference E_STATE ;
    public ElementReference E_ZIP_CODE ;
    public ElementReference E_COUNTRY ;
    public ElementReference E_PHONE ;
    public ElementReference E_EMAIL ;
    public ElementReference E_FAX ;
    public ElementReference E_LICENSE_NO ;
    public ElementReference E_COMMENT ;
    public ElementReference E_CREDIT_LINE ;
    public ElementReference E_LAST_UPDATE ;
    public ElementReference E_UPDATE_BY ;
    public ElementReference E_COMMENT_UPDATE ;
    public ElementReference E_STATUS ;
    public ElementReference E_LOGO ;
    public ElementReference E_LEVEL_ACCESS ;
    public ElementReference E_DATE_CREATE ;
    public ElementReference E_DATE_STOP ;
    public ElementReference E_StatusName ;
    public ElementReference E_AGENT_TYPE ;
    public ElementReference E_EIN ;
    public ElementReference E_TYPE_AGENT ;
    public ElementReference E_BUSINESS_TYPE ;
    public ElementReference E_BUSINESS_STRUCT ;
    public ElementReference E_SENDING_COUNTRY ;
    public ElementReference E_TO_COUNTRY ;
    public ElementReference E_PAYMENTAGENT ;
    public ElementReference E_COMPLIANCE_OFFICER ;
    public ElementReference E_BANK_NAME ;
    public ElementReference E_BANK_ADDRESS ;
    public ElementReference E_BANK_TYPE ;
    public ElementReference E_REASONFORBLOCK ;
    public ElementReference E_TIN ;
    public ElementReference E_OWNER_NAME2 ;
    public ElementReference E_FIRSTNAME2 ;
    public ElementReference E_LASTNAME2 ;
    public ElementReference E_MIDDLENAME2 ;
    public ElementReference E_ID ;
    public ElementReference E_SS ;
    public ElementReference E_BUSINESS_LICENSE_TYPE ;
    public ElementReference E_OWNERADDRESS ;
    public ElementReference E_OWNERCITY ;
    public ElementReference E_OWNERSTATE ;
    public ElementReference E_OWNERZIP_CODE ;
    public ElementReference E_OWNERADDRESS1 ;
    public ElementReference E_OWNERCITY1 ;
    public ElementReference E_OWNERSTATE1 ;
    public ElementReference E_OWNERZIP_CODE1 ;
    public ElementReference E_ID1 ;
    public ElementReference E_SS1 ;
    public ElementReference E_EXPIREDATE ;
    public ElementReference E_OwnerCountry ;
    public ElementReference E_OwnerCountry1 ;
    public ElementReference E_LOCATION ;
    public ElementReference E_OwnerPhone ;
    public ElementReference E_OwnerPhone1 ;
    public ElementReference E_STATEFILE ;
    public ElementReference E_OWNEREXPIRE ;
    public ElementReference E_OWNEREXPIRE1 ;
    public ElementReference E_EXPIRE ;
    public ElementReference E_EXPIRE1 ;
    public ElementReference E_PAYMENT_METHOD ;
    public ElementReference E_CREDIT_LINEAPP ;
    public ElementReference E_BEGIN_BALANCE ;
    public ElementReference E_payment ;
    public ElementReference E_HighRiskExposures ;
    public ElementReference E_Destination ;
    public ElementReference E_HIFCA ;
    public ElementReference E_HIDTA ;
    public ElementReference E_Bond ;
    public ElementReference E_BondAmount ;
    public ElementReference E_datalatitude ;
    public ElementReference E_datalongitude ;
    public ElementReference E_UserName ;
    public ElementReference E_Password ;
    public ElementReference E_Repassword ;

    public int Height { get; set; } = 800; public int HeightBody { get; set; } = 800;
    public String MaxHeight { get; set; } = "500px"; public String MaxHeightBody { get; set; } = "800px";
    public int Width { get; set; }
    public String MaxWidths { get; set; } = "500px";
    public string?  back { get; set; } = "white!important";
    public string?  backerror { get; set; } = "yellow!important";

    private dynamic SendStateList = new Array[] { };
    SendStateList SendStateLists { get; set; }
    private string SendStateID = "";

    private dynamic StateOwnerList = new Array[] { };
    SendStateList StateOwnerLists { get; set; }
    private dynamic StateOwner1List = new Array[] { };
    SendStateList StateOwner1Lists { get; set; }

     private dynamic StateOwner3List = new Array[] { };
    SendStateList StateOwner3Lists { get; set; }

    private dynamic CountryList = new Array[] { };
    CountryList CountryLists { get; set; }
    private string CountryCode = "";

    DialogOptions dialogOptions = new DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true,CloseOnEscapeKey = true,CloseButton=true,Position=DialogPosition.Center };
    DialogOptions dialogOptionsEdit = new DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true,CloseOnEscapeKey = true,CloseButton=true, Position=DialogPosition.Center };
    int activeIndex = 0;
    string pagename = "/Indexs/AgentProfile";
    public List<MenuChildList> menuChildLists { get; set; } = new List<MenuChildList>();
    public bool isExportExcel = false;
    private string displayVerify = "None";
    protected async void ExportExcel()
    {
        try
        {
            isExportExcel = true;
            StateHasChanged();

            if (AgentListModels.Count > 0)
            {
                var xls = new Excel();
                await xls.DownloadAgentListAsync(JS, AgentListModels, "AgentList.xlsx");
                toastService.ShowSuccess("Download AgentList successful!");
            }
            else
            {
                toastService.ShowWarning("Nothing to download!");
            }
        }
        catch (Exception ex)
        {
            isExportExcel = false;
        }
        isExportExcel = false;
        StateHasChanged();
    }
    protected async void AddBEGIN_BALANCEChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.BEGIN_BALANCE = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddCREDIT_LINEAPPChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.CREDIT_LINEAPP = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddCREDIT_LINEChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.CREDIT_LINE = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddHighRiskExposuresChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.HighRiskExposures = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddDestinationChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.Destination = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddHIFCAChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.HIFCA = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddHIDTAChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.HIDTA = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void AddBondAmountChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.BondAmount = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void EditCREDIT_LINEAPPChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.CREDIT_LINEAPP = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void EditCREDIT_LINEChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.CREDIT_LINE = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void EditHighRiskExposuresChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.HighRiskExposures = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void EditDestinationChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.Destination = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void EditHIFCAChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.HIFCA = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    protected async void EditHIDTAChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.HIDTA = Convert.ToInt16(e.Value == null ? "0" : e.Value.ToString());
        StateHasChanged();
    }
    protected async void EditBondAmountChange(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.BondAmount = Convert.ToDouble(e.Value == null ? "0" : e.Value.ToString());           
        StateHasChanged();
    }
    private async Task CloseDelete()
    {
        IsViewDelete = false;
        this.StateHasChanged();
    }
    public void  CheckAddBondClicked(object checkedValue)
    {       
        StateHasChanged();
        if ((bool)checkedValue)
        {
            modelAddNewAgent.Bond = true;
        }
        else
        {
            modelAddNewAgent.Bond = false;
        }
        StateHasChanged();
    }
    public void  CheckAddPaymentClicked(object checkedValue)
    {       
        StateHasChanged();
        if ((bool)checkedValue)
        {
            modelAddNewAgent.payment = true;
        }
        else
        {
            modelAddNewAgent.payment = false;
        }
        StateHasChanged();
    }
    public void  CheckEditBondClicked(object checkedValue)
    {       
        StateHasChanged();
        if ((bool)checkedValue)
        {
            modelEditAgent.Bond = true;
        }
        else
        {
            modelEditAgent.Bond = false;
        }
        StateHasChanged();
    }
    public void CheckEditPaymentClicked(object checkedValue)
    {       
        StateHasChanged();
        if ((bool)checkedValue)
        {
            modelEditAgent.payment = true;
        }
        else
        {
            modelEditAgent.payment = false;
        }
        StateHasChanged();
    }
    private void LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFiles.Clear();
        StateHasChanged();
        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                loadedFiles.Add(file);
            }
            catch (Exception ex)
            {
                toastService.ShowWarning("File:" + file.Name + ", Error: " + ex.Message);
            }
        }
        isLoading = false;
        StateHasChanged();
    }
    protected async void UploadFile()
    {
        try
        {
            StateHasChanged();
            isUploadFile=true;
            if (await ValidateUpload())
            {
                List<CustomerProfileFile> SenderDocumentsLists = new List<CustomerProfileFile>();
                foreach (var file in loadedFiles)
                {
                    CustomerProfileFile SenderDocumentsfile = new CustomerProfileFile();
                    SenderDocumentsfile.FileName1 = modelfile.FileName;
                    SenderDocumentsfile.FileName = file.Name.ToString();
                    var buffers = new byte[file.Size];
                    await file.OpenReadStream(maxFileSize).ReadAsync(buffers);

                    SenderDocumentsfile.FileLoad = buffers;
                    SenderDocumentsLists.Add(SenderDocumentsfile);
                }
                if (SenderDocumentsLists.Count > 0)
                {
                    UploadFileModel modelf = new UploadFileModel();  
                    modelf.UserID=model.UserID;
                    modelf.AgentID=modelEditAgent.AGENT_ID;
                    modelf.SenderDocumentsLists=SenderDocumentsLists;
                    StateHasChanged();
                    var resp = await HttpService.Request("post", "/Index/UploadAgentFile", modelf);                  
                    if (resp.Status.ToString() == "200")
                    {
                        loadedFiles.Clear();
                        loadedFiles = new();
                        modelfile.FileName = "";
                        StateHasChanged();
                        toastService.ShowSuccess("File upload successful");
                        dynamic payload1 = new
                        {
                            Form = "/Indexs/AgentProfile",
                            FormName = "Agent Profile",
                            Action = "GetAgentFile",
                            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                            UserID = model.UserID,
                            AgentID = modelEditAgent.AGENT_ID,
                            pageIndex = 1,
                            pageSize = 50
                        };
                        AgentFileResps respdoc = await HttpService.Post<AgentFileResps>
                        ("/Index/GetAgentFile", payload1);
                        if (respdoc.Status.ToString() == "200")
                        {
                            SenderDocumentsList = respdoc.Content.AgentFileLists;

                        }
                        else
                        {
                            toastService.ShowWarning(respdoc.Message.ToString());
                            SenderDocumentsList = new List<AgentFile>();
                        }
                    }
                    else
                    {
                        toastService.ShowWarning(resp.Message.ToString());
                    }
                }
            }

        }
        catch(Exception ex)
        {
            isUploadFile = false;
            toastService.ShowWarning(ex.Message);
        }
        isUploadFile = false;
        StateHasChanged();
    }
    private async Task<bool> ValidateUpload()
    {
        bool result=true;
        if(loadedFiles.Count==0)
        {
            toastService.ShowWarning("Nothing to Upload");
            result=false;
        }
        if(string.IsNullOrEmpty( modelfile.FileName))
        {
            C_FileName = backerror;          
            await E_FileName.FocusAsync();           
            toastService.ShowWarning("Enter File Name");
            result=false;
        }
        StateHasChanged();
        return result;
    }
    protected async void ChangeOwner1Country(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.OwnerCountry1 = e.Value.ToString();
        dynamic payload = new
        {
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeOwner1Country",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelAddNewAgent.OwnerCountry1,
            pageIndex = 1,
            pageSize = 50
        };
        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            StateOwner1List = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelAddNewAgent.OWNERSTATE1 = StateOwner1List[0].StateCode.ToString();
            }
        }
        StateHasChanged();
    }
    protected async void ChangeEditOwner1Country(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.OwnerCountry1 = e.Value.ToString();
        dynamic payload = new
        {
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeOwner1Country",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelEditAgent.OwnerCountry1,
            pageIndex = 1,
            pageSize = 50
        };
        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            StateOwner1List = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelEditAgent.OWNERSTATE1 = StateOwner1List[0].StateCode.ToString();
            }
        }
        StateHasChanged();
    }
    protected async void ChangeOwner3Country(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.OwnerCountry3 = e.Value.ToString();
        dynamic payload = new
        {
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeOwner3Country",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelAddNewAgent.OwnerCountry3,
            pageIndex = 1,
            pageSize = 50
        };
        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            StateOwner3List = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelAddNewAgent.OWNERSTATE3 = StateOwner3List[0].StateCode.ToString();
            }
        }
        StateHasChanged();
    }
    protected async void ChangeEditOwner3Country(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.OwnerCountry3 = e.Value.ToString();
        dynamic payload = new
        {
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeOwner3Country",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelEditAgent.OwnerCountry3,
            pageIndex = 1,
            pageSize = 50
        };
        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            StateOwner3List = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelEditAgent.OWNERSTATE3 = StateOwner3List[0].StateCode.ToString();
            }
        }
        StateHasChanged();
    }
    protected async void EditAgentReport()
    {
        isViewEditAgent=false;
        //C_FULLNAME  = "white!important";
        //C_LASTNAME  = "white!important";
        //C_FIRSTNAME  = "white!important";
        //C_MIDDLENAME  = "white!important";
        //C_EMAIL  = "white!important";
        //C_ID_TYPE  = "white!important";
        //C_DRIVER_ID  = "white!important";
        //C_DRIVER_ID_BK  = "white!important";
        //C_PASSPORT_NO  = "white!important";
        //C_STATE_ISSUE  = "white!important";
        //C_EXPIRATION  = "white!important";
        //C_IssueDateBK  = "white!important";
        //C_DOB_BK  = "white!important";
        //C_SSN_BK  = "white!important";
        //C_ADDRESS  = "white!important";
        //C_CITY  = "white!important";
        //C_STATE  = "white!important";
        //C_ZIP_CODE  = "white!important";
        //C_PHONE1  = "white!important";
        //C_CountryIssue  = "white!important";
        //C_Occupation  = "white!important";
        //C_ReasonforUpdate  = "white!important";
        //C_ReasonforBlock  = "white!important";
        //C_Status  = "white!important";
        StateHasChanged();
    }
    protected async void ChangeOwnerCountry(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.OwnerCountry = e.Value.ToString();
        dynamic payload = new
        { 
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeOwnerCountry",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelAddNewAgent.OwnerCountry,
            pageIndex = 1,
            pageSize = 50
        };
        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            StateOwnerList = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelAddNewAgent.OWNERSTATE = StateOwnerList[0].StateCode.ToString();
            }
        }

        StateHasChanged();
    }
      protected async void ChangeEditOwnerCountry(ChangeEventArgs e)
    {
        StateHasChanged();
        modelEditAgent.OwnerCountry = e.Value.ToString();
        dynamic payload = new
        { 
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeEditOwnerCountry",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelEditAgent.OwnerCountry,
            pageIndex = 1,
            pageSize = 50
        };
        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            StateOwnerList = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelEditAgent.OWNERSTATE = StateOwnerList[0].StateCode.ToString();
            }
        }

        StateHasChanged();
    }
    protected async void ChangeBusinessAdd(ChangeEventArgs e)
    {       
        modelAddNewAgent.BUSINESS_STRUCT = e.Value.ToString();
        StateHasChanged();
    }
    protected async void ChangeBusinessEdit(ChangeEventArgs e)
    {       
        modelEditAgent.BUSINESS_STRUCT = e.Value.ToString();
        StateHasChanged();
    }
    protected async void ChangeCountry(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.COUNTRY = e.Value.ToString();
        dynamic payload = new
        {
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "ChangeCountry",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelAddNewAgent.COUNTRY,
            pageIndex = 1,
            pageSize = 50
        };

        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            SendStateList = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelAddNewAgent.STATE = SendStateList[0].StateCode.ToString();
            }
        }

        StateHasChanged();
    }
    protected async void AddNew()
    {
        try
        {    
            StateHasChanged();
            isAddNew = true;
            if(await ValidateAddAgent())
            {                              
                dynamic payload = new
                {      
                    Form = "/Indexs/AgentProfile",
                    FormName = "Agent Profile",
                    Action = "AddNew",
                    UserNameLogin = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                    UserID = model.UserID,
                    UserName = modelAddNewAgent.UserName ==null?"":modelAddNewAgent.UserName ,
                    AGENT_NAME = modelAddNewAgent.AGENT_NAME  ,                  
                    OWNER_NAME= modelAddNewAgent.OWNER_NAME  ,
                    LEGAL_NAME= modelAddNewAgent.LEGAL_NAME  ,
                    DBA= modelAddNewAgent.DBA  ,
                    FIRSTNAME= modelAddNewAgent.FIRSTNAME  ,
                    LASTNAME= modelAddNewAgent.LASTNAME  ,
                    MIDDLENAME= modelAddNewAgent.MIDDLENAME  ,
                    FULLNAME= modelAddNewAgent.FULLNAME  ,
                    FULLADDRESS= modelAddNewAgent.FULLADDRESS  ,        
                    ADDRESS= modelAddNewAgent.ADDRESS  ,
                    CITY= modelAddNewAgent.CITY  ,
                    STATE= modelAddNewAgent.STATE  ,
                    ZIP_CODE= modelAddNewAgent.ZIP_CODE  ,
                    COUNTRY= modelAddNewAgent.COUNTRY  ,
                    PHONE= modelAddNewAgent.PHONE  ,
                    EMAIL= modelAddNewAgent.EMAIL  ,
                    FAX= modelAddNewAgent.FAX  ,
                    LICENSE_NO= modelAddNewAgent.LICENSE_NO  ,
                    COMMENT= modelAddNewAgent.COMMENT  ,
                    CREDIT_LINE= modelAddNewAgent.CREDIT_LINE  ,
                    COMMENT_UPDATE= modelAddNewAgent.COMMENT_UPDATE  ,
                    STATUS= modelAddNewAgent.STATUS  ,
                    LOGO= modelAddNewAgent.LOGO  ,
                    LEVEL_ACCESS= modelAddNewAgent.LEVEL_ACCESS  ,
                    DATE_CREATE= modelAddNewAgent.DATE_CREATECon  ,
                    DATE_STOP = modelAddNewAgent.DATE_STOPCon,
                    StatusName= modelAddNewAgent.StatusName  ,
                    AGENT_TYPE= modelAddNewAgent.AGENT_TYPE  ,
                    EIN= modelAddNewAgent.EIN  ,
                    TYPE_AGENT= modelAddNewAgent.TYPE_AGENT  ,
                    BUSINESS_TYPE= modelAddNewAgent.BUSINESS_TYPE  ,
                    BUSINESS_STRUCT= modelAddNewAgent.BUSINESS_STRUCT  ,
                    SENDING_COUNTRY= modelAddNewAgent.SENDING_COUNTRY  ,
                    TO_COUNTRY= modelAddNewAgent.TO_COUNTRY  ,
                    PAYMENTAGENT= modelAddNewAgent.PAYMENTAGENT  ,
                    COMPLIANCE_OFFICER= modelAddNewAgent.COMPLIANCE_OFFICER  ,
                    BANK_NAME= modelAddNewAgent.BANK_NAME  ,
                    BANK_ADDRESS= modelAddNewAgent.BANK_ADDRESS  ,
                    BANK_TYPE= modelAddNewAgent.BANK_TYPE  ,
                    REASONFORBLOCK= modelAddNewAgent.REASONFORBLOCK  ,
                    STT= modelAddNewAgent.STT  ,
                    TIN= modelAddNewAgent.TIN  ,
                    OWNER_NAME2= modelAddNewAgent.OWNER_NAME2  ,
                    FIRSTNAME2= modelAddNewAgent.FIRSTNAME2  ,
                    LASTNAME2= modelAddNewAgent.LASTNAME2  ,
                    MIDDLENAME2= modelAddNewAgent.MIDDLENAME2  ,
                    ID= modelAddNewAgent.ID  ,
                    SS= modelAddNewAgent.SS  ,
                    BUSINESS_LICENSE_TYPE= modelAddNewAgent.BUSINESS_LICENSE_TYPE  ,
                    OWNERADDRESS= modelAddNewAgent.OWNERADDRESS  ,
                    OWNERFULLADDRESS= modelAddNewAgent.OWNERFULLADDRESS  ,
                    OWNERCITY= modelAddNewAgent.OWNERCITY  ,
                    OWNERSTATE= modelAddNewAgent.OWNERSTATE  ,
                    OWNERZIP_CODE= modelAddNewAgent.OWNERZIP_CODE  ,
                    OWNERFULLADDRESS2= modelAddNewAgent.OWNERFULLADDRESS2  ,
                    OWNERADDRESS1= modelAddNewAgent.OWNERADDRESS1  ,
                    OWNERCITY1= modelAddNewAgent.OWNERCITY1  ,
                    OWNERSTATE1= modelAddNewAgent.OWNERSTATE1  ,
                    OWNERZIP_CODE1= modelAddNewAgent.OWNERZIP_CODE1  ,
                    ID1= modelAddNewAgent.ID1  ,
                    SS1= modelAddNewAgent.SS1  ,
                    EXPIREDATE= modelAddNewAgent.EXPIREDATECon  ,
                    OwnerCountry= modelAddNewAgent.OwnerCountry  ,
                    OwnerCountry1= modelAddNewAgent.OwnerCountry1  ,
                    LOCATION= modelAddNewAgent.LOCATION  ,
                    OwnerPhone= modelAddNewAgent.OwnerPhone  ,
                    OwnerPhone1= modelAddNewAgent.OwnerPhone1  ,
                    STATEFILE= modelAddNewAgent.STATEFILE  ,
                    OWNEREXPIRE= modelAddNewAgent.OWNEREXPIRECon  ,
                    OWNEREXPIRE1= modelAddNewAgent.OWNEREXPIRE1Con  ,
                    EXPIRE= modelAddNewAgent.EXPIRECon  ,
                    EXPIRE1 = modelAddNewAgent.EXPIRE1Con,
                    PAYMENT_METHOD= modelAddNewAgent.PAYMENT_METHOD  ,
                    CREDIT_LINEAPP= modelAddNewAgent.CREDIT_LINEAPP  ,
                    BEGIN_BALANCE= modelAddNewAgent.BEGIN_BALANCE  ,
                    payment= modelAddNewAgent.payment  ,
                    HighRiskExposures= modelAddNewAgent.HighRiskExposures  ,
                    Destination= modelAddNewAgent.Destination  ,
                    HIFCA= modelAddNewAgent.HIFCA  ,
                    HIDTA= modelAddNewAgent.HIDTA  ,
                    Bond= modelAddNewAgent.Bond  ,
                    BondAmount= modelAddNewAgent.BondAmount  ,
                    chkCheckOfac= modelAddNewAgent.UserName  ,
                    datalatitude= modelAddNewAgent.datalatitude  ,
                    datalongitude= modelAddNewAgent.datalongitude  ,
                    Password= modelAddNewAgent.Password==null?"":modelAddNewAgent.Password  ,
                    Repassword = modelAddNewAgent.Repassword == null ? "":modelAddNewAgent.Repassword  ,
                    BUSINESS_STRUCT_NAME= modelAddNewAgent.BUSINESS_STRUCT_NAME  ,
                    SENDCOUNTRYFULL= modelAddNewAgent.SENDCOUNTRYFULL  ,
                    RECEIVECOUNTRYFULL= modelAddNewAgent.RECEIVECOUNTRYFULL ,
                    CountryAgentSend =CountryAgentSendAdd,
                    CountryAgentReceive= CountryAgentReceiveAdd ,
                    CID= modelAddNewAgent.CID  ,
                    CSS= modelAddNewAgent.CSS  ,
                    CEXPIREDATE = modelAddNewAgent.CEXPIREDATECon,
                    OWNER_NAME3= modelAddNewAgent.OWNER_NAME3  ,
                    FIRSTNAME3= modelAddNewAgent.FIRSTNAME3  ,
                    LASTNAME3= modelAddNewAgent.LASTNAME3  ,
                    MIDDLENAME3= modelAddNewAgent.MIDDLENAME3  ,
                    OWNERADDRESS3= modelAddNewAgent.OWNERADDRESS3  ,
                    OWNERCITY3= modelAddNewAgent.OWNERCITY3  ,
                    OWNERSTATE3= modelAddNewAgent.OWNERSTATE3  ,
                    OWNERZIP_CODE3= modelAddNewAgent.OWNERZIP_CODE3  ,
                    ID3= modelAddNewAgent.ID3  ,
                    SS3= modelAddNewAgent.SS3  ,
                    OWNEREXPIRE3 = modelAddNewAgent.OWNEREXPIRE3Con,
                    OwnerCountry3= modelAddNewAgent.OwnerCountry3,
                    OwnerPhone3= modelAddNewAgent.OwnerPhone3  ,
                };
                var resp = await HttpService.Request("post", "/Index/AddNewAgent", payload);
                if (resp.Status.ToString() == "200")
                {               
                    toastService.ShowSuccess("Add New Agent successful");
                    isAddNewAgent = false;
                    await getData();
                }
                else
                {
                    toastService.ShowWarning(resp.Message.ToString());
                }
            }
            StateHasChanged();

        }
        catch (Exception ex)
        {

            toastService.ShowError(ex.Message);
        }

        isAddNew = false;
        StateHasChanged();
    }
    protected async void UpdateAgent()
    {
        try
        {    
            StateHasChanged();
            isUpdate = true;
            if(await ValidateUpdateAgent())
            {
                dynamic payload = new
                {  
                    Form = "/Indexs/AgentProfile",
                    FormName = "Agent Profile",
                    Action = "UpdateAgent",
                    UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                    UserID = model.UserID,
                    AgentID = modelEditAgent.AGENT_ID,
                    AGENT_ID = modelEditAgent.AGENT_ID,                    
                    AGENT_NAME = modelEditAgent.AGENT_NAME,
                    OWNER_NAME = modelEditAgent.OWNER_NAME,
                    LEGAL_NAME = modelEditAgent.LEGAL_NAME,
                    DBA = modelEditAgent.DBA,
                    FIRSTNAME = modelEditAgent.FIRSTNAME,
                    LASTNAME = modelEditAgent.LASTNAME,
                    MIDDLENAME = modelEditAgent.MIDDLENAME,
                    FULLNAME = modelEditAgent.FULLNAME,
                    FULLADDRESS = modelEditAgent.FULLADDRESS,
                    ADDRESS = modelEditAgent.ADDRESS,
                    CITY = modelEditAgent.CITY,
                    STATE = modelEditAgent.STATE,
                    ZIP_CODE = modelEditAgent.ZIP_CODE,
                    COUNTRY = modelEditAgent.COUNTRY,
                    PHONE = modelEditAgent.PHONE,
                    EMAIL = modelEditAgent.EMAIL,
                    FAX = modelEditAgent.FAX,
                    LICENSE_NO = modelEditAgent.LICENSE_NO,
                    COMMENT = modelEditAgent.COMMENT,
                    CREDIT_LINE = modelEditAgent.CREDIT_LINE,
                    COMMENT_UPDATE = modelEditAgent.COMMENT_UPDATE,
                    STATUS = modelEditAgent.STATUS,
                    LOGO = modelEditAgent.LOGO,
                    LEVEL_ACCESS = modelEditAgent.LEVEL_ACCESS,
                    DATE_CREATE = modelEditAgent.DATE_CREATECon,
                    DATE_STOP = modelEditAgent.DATE_STOPCon,
                    StatusName = modelEditAgent.StatusName,
                    AGENT_TYPE = modelEditAgent.AGENT_TYPE,
                    EIN = modelEditAgent.EIN,
                    TYPE_AGENT = modelEditAgent.TYPE_AGENT,
                    BUSINESS_TYPE = modelEditAgent.BUSINESS_TYPE,
                    BUSINESS_STRUCT = modelEditAgent.BUSINESS_STRUCT,
                    SENDING_COUNTRY = modelEditAgent.SENDING_COUNTRY,
                    TO_COUNTRY = modelEditAgent.TO_COUNTRY,
                    PAYMENTAGENT = modelEditAgent.PAYMENTAGENT,
                    COMPLIANCE_OFFICER = modelEditAgent.COMPLIANCE_OFFICER,
                    BANK_NAME = modelEditAgent.BANK_NAME,
                    BANK_ADDRESS = modelEditAgent.BANK_ADDRESS,
                    BANK_TYPE = modelEditAgent.BANK_TYPE,
                    REASONFORBLOCK = modelEditAgent.REASONFORBLOCK,
                    STT = modelEditAgent.STT,
                    TIN = modelEditAgent.TIN,
                    OWNER_NAME2 = modelEditAgent.OWNER_NAME2,
                    FIRSTNAME2 = modelEditAgent.FIRSTNAME2,
                    LASTNAME2 = modelEditAgent.LASTNAME2,
                    MIDDLENAME2 = modelEditAgent.MIDDLENAME2,
                    ID = modelEditAgent.ID,
                    SS = modelEditAgent.SS,
                    BUSINESS_LICENSE_TYPE = modelEditAgent.BUSINESS_LICENSE_TYPE,
                    OWNERADDRESS = modelEditAgent.OWNERADDRESS,
                    OWNERFULLADDRESS = modelEditAgent.OWNERFULLADDRESS,
                    OWNERCITY = modelEditAgent.OWNERCITY,
                    OWNERSTATE = modelEditAgent.OWNERSTATE,
                    OWNERZIP_CODE = modelEditAgent.OWNERZIP_CODE,
                    OWNERFULLADDRESS2 = modelEditAgent.OWNERFULLADDRESS2,
                    OWNERADDRESS1 = modelEditAgent.OWNERADDRESS1,
                    OWNERCITY1 = modelEditAgent.OWNERCITY1,
                    OWNERSTATE1 = modelEditAgent.OWNERSTATE1,
                    OWNERZIP_CODE1 = modelEditAgent.OWNERZIP_CODE1,
                    ID1 = modelEditAgent.ID1,
                    SS1 = modelEditAgent.SS1,
                    EXPIREDATE = modelEditAgent.EXPIREDATECon,
                    OwnerCountry = modelEditAgent.OwnerCountry,
                    OwnerCountry1 = modelEditAgent.OwnerCountry1,
                    LOCATION = modelEditAgent.LOCATION,
                    OwnerPhone = modelEditAgent.OwnerPhone,
                    OwnerPhone1 = modelEditAgent.OwnerPhone1,
                    STATEFILE = modelEditAgent.STATEFILE,
                    OWNEREXPIRE = modelEditAgent.OWNEREXPIRECon,
                    OWNEREXPIRE1 = modelEditAgent.OWNEREXPIRE1Con,
                    EXPIRE = modelEditAgent.EXPIRECon,
                    EXPIRE1 = modelEditAgent.EXPIRE1Con,
                    PAYMENT_METHOD = modelEditAgent.PAYMENT_METHOD,
                    CREDIT_LINEAPP = modelEditAgent.CREDIT_LINEAPP,
                    BEGIN_BALANCE = modelEditAgent.BEGIN_BALANCE,
                    payment = modelEditAgent.payment,
                    HighRiskExposures = modelEditAgent.HighRiskExposures,
                    Destination = modelEditAgent.Destination,
                    HIFCA = modelEditAgent.HIFCA,
                    HIDTA = modelEditAgent.HIDTA,
                    Bond = modelEditAgent.Bond,
                    BondAmount = modelEditAgent.BondAmount,
                    chkCheckOfac = modelEditAgent.UserName,
                    datalatitude = modelEditAgent.datalatitude,
                    datalongitude = modelEditAgent.datalongitude,
                    Password = modelEditAgent.Password,
                    Repassword = modelEditAgent.Repassword,
                    BUSINESS_STRUCT_NAME = modelEditAgent.BUSINESS_STRUCT_NAME,
                    SENDCOUNTRYFULL = modelEditAgent.SENDCOUNTRYFULL,
                    RECEIVECOUNTRYFULL = modelEditAgent.RECEIVECOUNTRYFULL,
                    CountryAgentSend = CountryAgentSendEdit,
                    CountryAgentReceive = CountryAgentReceiveEdit,
                                        CID= modelEditAgent.CID  ,
                    CSS= modelEditAgent.CSS  ,
                    CEXPIREDATE = modelEditAgent.CEXPIREDATECon,
                                        OWNER_NAME3= modelEditAgent.OWNER_NAME3  ,
                    FIRSTNAME3= modelEditAgent.FIRSTNAME3  ,
                    LASTNAME3= modelEditAgent.LASTNAME3  ,
                    MIDDLENAME3= modelEditAgent.MIDDLENAME3  ,
                    OWNERADDRESS3= modelEditAgent.OWNERADDRESS3  ,
                    OWNERCITY3= modelEditAgent.OWNERCITY3  ,
                    OWNERSTATE3= modelEditAgent.OWNERSTATE3  ,
                    OWNERZIP_CODE3= modelEditAgent.OWNERZIP_CODE3  ,
                    ID3= modelEditAgent.ID3  ,
                    SS3= modelEditAgent.SS3  ,
                    OWNEREXPIRE3 = modelEditAgent.OWNEREXPIRE3Con,
                    OwnerCountry3= modelEditAgent.OwnerCountry3,
                    OwnerPhone3 = modelEditAgent.OwnerPhone3,
                };
                var resp = await HttpService.Request("post", "/Index/UpdateAgent", payload);
                if (resp.Status.ToString() == "200")
                {               
                    toastService.ShowSuccess("Update Agent successful");
                    isEditAgent = false;
                    await getData();
                }
                else
                {
                    toastService.ShowWarning(resp.Message.ToString());
                }
            }
            StateHasChanged();

        }
        catch (Exception ex)
        {

            toastService.ShowError(ex.Message);
        }

        isUpdate = false;
        StateHasChanged();
    }
    //check validate Add new
    private async Task<bool> ValidateAddAgent()
    {  StateHasChanged();
        bool result=true;
        bool focus=true;
        if(string.IsNullOrEmpty(modelAddNewAgent.AGENT_NAME))
        {
            result=false;
            C_AGENT_NAME = backerror;
            toastService.ShowWarning("Enter Agent Name");
            await E_AGENT_NAME.FocusAsync();
            focus = false;
        }
        else
        {
            C_AGENT_NAME = back; 
        }
        if(string.IsNullOrEmpty(modelAddNewAgent.ADDRESS))
        {
            result=false;
            C_ADDRESS = backerror;
            toastService.ShowWarning("Enter Address");
            if(focus)
            {
                await E_ADDRESS.FocusAsync();
                focus = false;
            }            
        }
        else
        {
            C_ADDRESS = back; 
        }
        if(string.IsNullOrEmpty(modelAddNewAgent.LEGAL_NAME))
        {
            result=false;
            C_LEGAL_NAME = backerror;
            toastService.ShowWarning("Enter Legal Name");
            if(focus)
            {
                await E_LEGAL_NAME.FocusAsync();
                focus = false;
            }            
        }
        else
        {
            C_LEGAL_NAME = back; 
        }
        if(string.IsNullOrEmpty(modelAddNewAgent.DBA))
        {
            result=false;
            C_DBA = backerror;
            toastService.ShowWarning("Enter DBA");
            if(focus)
            {
                await E_DBA.FocusAsync();
                focus = false;
            }            
        }
        else
        {
            C_DBA = back; 
        }
        if(string.IsNullOrEmpty(modelAddNewAgent.PHONE))
        {
            result=false;
            C_PHONE = backerror;
            toastService.ShowWarning("Enter Phone");
            // if(focus)
            // {
            //     await E_PHONE.FocusAsync();
            //     focus = false;
            // }            
        }
        else
        {
            C_PHONE = back; 
        }
        if(string.IsNullOrEmpty(modelAddNewAgent.STATE))
        {
            result=false;
            C_STATE = backerror;
            toastService.ShowWarning("Enter State");
            if(focus)
            {
                await E_STATE.FocusAsync();
                focus = false;
            }            
        }
        else
        {
            if(modelAddNewAgent.STATE.Contains("Select One"))
            {
                result=false;
                C_STATE = backerror;
                toastService.ShowWarning("Select State");
                if(focus)
                {
                    await E_STATE.FocusAsync();
                    focus = false;
                }            
            }
            else
            {
                C_STATE = back; 
            }

        }
        if(string.IsNullOrEmpty(modelAddNewAgent.CITY))
        {
            result=false;
            C_CITY = backerror;
            toastService.ShowWarning("Enter City");
            if(focus)
            {
                await E_CITY.FocusAsync();
                focus = false;
            }            
        }
        else
        {
            C_CITY = back; 
        }
        if(!string.IsNullOrEmpty(modelAddNewAgent.UserName))
        {
            dynamic payload = new
            {       
                Form = "/Indexs/AgentProfile",
                FormName = "Agent Profile",
                Action = "CheckExistUserName",
                UserNameLogin = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                UserName = modelAddNewAgent.UserName             
            };
            var resp = await HttpService.Request("post", "/Index/CheckExistUserName", payload);
            if (resp.Status.ToString() != "200")
            {
                result=false;
                C_UserName = backerror;
                toastService.ShowWarning(resp.Message.ToString());
                if(focus)
                {
                    await E_UserName.FocusAsync();
                    focus = false;
                }           
            }
            else
            {
                C_UserName = back; 
            }
             if(string.IsNullOrEmpty(modelAddNewAgent.Password))
            {
                result=false;
                C_Password = backerror;
                toastService.ShowWarning("Enter Password");
                if(focus)
                {
                    await E_Password.FocusAsync();
                    focus = false;
                }            
            }
            else
            {
                if(modelAddNewAgent.Password.Length<6)
                {
                    result=false;
                    C_Password = backerror;
                    toastService.ShowWarning("* The password must be at least 6 digits in length.");
                    if(focus)
                    {
                        await E_Password.FocusAsync();
                        focus = false;
                    }         
                }
                else
                {
                    if (!Regex.IsMatch(modelAddNewAgent.Password,  @"^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W).{6,20}$"))
                    {
                        result=false;
                        C_Password = backerror;
                        toastService.ShowWarning("At least 1 letter [a-z], 1 number [0-9], and 1 special character");
                        if(focus)
                        {
                            await E_Password.FocusAsync();
                            focus = false;
                        }         
                    }
                    else
                    {
                        C_Password = back; 
                    }               
                }           
            }
            if(string.IsNullOrEmpty(modelAddNewAgent.Repassword))
            {
                result=false;
                C_Repassword = backerror;
                toastService.ShowWarning("Enter Re Password");
                if(focus)
                {
                    await E_Repassword.FocusAsync();
                    focus = false;
                }            
            }
            else
            {
                if(modelAddNewAgent.Repassword.Length<6)
                {
                    result=false;
                    C_Repassword = backerror;
                    toastService.ShowWarning("The Re password must be at least 6 digits in length.");
                    if(focus)
                    {
                        await E_Repassword.FocusAsync();
                        focus = false;
                    }         
                }
                else
                {
                    if (!Regex.IsMatch(modelAddNewAgent.Repassword,  @"^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W).{6,20}$"))
                    {
                        result=false;
                        C_Repassword = backerror;
                        toastService.ShowWarning("At least 1 letter [a-z], 1 number [0-9], and 1 special character");
                        if(focus)
                        {
                            await E_Repassword.FocusAsync();
                            focus = false;
                        }         
                    }
                    else
                    {
                        C_Repassword = back; 
                    }               
                }           
            }
            if(!string.IsNullOrEmpty(modelAddNewAgent.Repassword) && !string.IsNullOrEmpty(modelAddNewAgent.Password))
            {
                if(modelAddNewAgent.Repassword!=modelAddNewAgent.Password)
                {
                    result=false;
                    C_Password = backerror;
                    C_Repassword = backerror;
                    toastService.ShowWarning("Password and Re Password is not match");
                    if(focus)
                    {
                        await E_Password.FocusAsync();
                        focus = false;
                    }         
                }              
            }
        }
       
        if(result){
            dynamic payload = new
            {   
                Form = "/Indexs/AgentProfile",
                FormName = "Agent Profile",
                Action = "CheckExistAgent",
                UserNameLogin = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                UserName = modelAddNewAgent.UserName  ,
                AGENT_NAME = modelAddNewAgent.AGENT_NAME  ,
                ADDRESS = modelAddNewAgent.ADDRESS  ,
                PHONE = modelAddNewAgent.PHONE  
            };

            var resp = await HttpService.Request("post", "/Index/CheckExistAgent", payload);
            if (resp.Status.ToString() != "200")
            {
                result=false;
                toastService.ShowWarning(resp.Message.ToString());

            }
        }
        //if(string.IsNullOrEmpty(modelAddNewAgent.AGENT_ID))
        //{
        //    result=false;
        //    C_AAGENT_ID = backerror;
        //    toastService.ShowWarning("Select Agent");
        //    if(focus)
        //    {
        //        await E_AAGENT_ID.FocusAsync();
        //        focus = false;
        //    }            
        //}
        //else
        //{
        //    if(modelAddNewAgent.AGENT_ID.Contains("Select One"))
        //    {
        //        result=false;
        //        C_AAGENT_ID = backerror;
        //        toastService.ShowWarning("Select Agent");
        //        if(focus)
        //        {
        //            await E_AAGENT_ID.FocusAsync();
        //            focus = false;
        //        }            
        //    }
        //    else
        //    {
        //        C_AAGENT_ID = back; 
        //    }

        //}
        //if(string.IsNullOrEmpty(modelAddNewAgent.LEVEL_ACCESS))
        //{
        //    result=false;
        //    C_ALEVEL_ACCESS = backerror;
        //    toastService.ShowWarning("Select Agent");
        //    if(focus)
        //    {
        //        await E_ALEVEL_ACCESS.FocusAsync();
        //        focus = false;
        //    }            
        //}
        //else
        //{
        //    if(modelAddNewAgent.LEVEL_ACCESS.Contains("Select One"))
        //    {
        //        result=false;
        //        C_ALEVEL_ACCESS = backerror;
        //        toastService.ShowWarning("Select Access Level");
        //        if(focus)
        //        {
        //            await E_ALEVEL_ACCESS.FocusAsync();
        //            focus = false;
        //        }            
        //    }
        //    else
        //    {
        //        C_ALEVEL_ACCESS = back; 
        //    }

        //}
        //if(string.IsNullOrEmpty(modelAddNewAgent.STATUS))
        //{
        //    result=false;
        //    C_ASTATUS = backerror;
        //    toastService.ShowWarning("Select Agent");
        //    if(focus)
        //    {
        //        await E_ASTATUS.FocusAsync();
        //        focus = false;
        //    }            
        //}
        //else
        //{
        //    if(modelAddNewAgent.STATUS.Contains("Select One"))
        //    {
        //        result=false;
        //        C_ASTATUS = backerror;
        //        toastService.ShowWarning("Select Status");
        //        if(focus)
        //        {
        //            await E_ASTATUS.FocusAsync();
        //            focus = false;
        //        }            
        //    }
        //    else
        //    {
        //        C_ASTATUS = back; 
        //    }

        //}
        //if(string.IsNullOrEmpty(modelAddNewAgent.ALLOW_IP))
        //{
        //    result=false;
        //    C_AALLOW_IP = backerror;
        //    toastService.ShowWarning("Enter IP");
        //    if(focus)
        //    {
        //        await E_AALLOW_IP.FocusAsync();
        //        focus = false;
        //    }            
        //}
        //else
        //{
        //    if (! Regex.IsMatch(modelAddNewAgent.ALLOW_IP, @"^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"))
        //    {
        //        result=false;
        //        C_AALLOW_IP = backerror;
        //        toastService.ShowWarning("IP is wrong");
        //        if(focus)
        //        {
        //            await E_AALLOW_IP.FocusAsync();
        //            focus = false;
        //        }            
        //    }
        //    else
        //    {
        //        C_AALLOW_IP= back; 
        //    }
        //}
        StateHasChanged();
        return result;
    }
    private async Task<bool> ValidateUpdateAgent()
    {  StateHasChanged();
        bool result=true;
        bool focus=true;
        //if(string.IsNullOrEmpty(modelEditAgent.FIRSTNAME))
        //{
        //    result=false;
        //    C_EFIRSTNAME = backerror;
        //    toastService.ShowWarning("Enter First Name");
        //    await E_EFIRSTNAME.FocusAsync();
        //    focus = false;
        //}
        //else
        //{
        //    C_EFIRSTNAME = back; 
        //}
        if (string.IsNullOrEmpty(modelEditAgent.AGENT_NAME))
        {
            result = false;
            C_AGENT_NAME = backerror;
            toastService.ShowWarning("Enter Agent Name");
            await E_AGENT_NAME.FocusAsync();
            focus = false;
        }
        else
        {
            C_AGENT_NAME = back;
        }
        if (string.IsNullOrEmpty(modelEditAgent.ADDRESS))
        {
            result = false;
            C_ADDRESS = backerror;
            toastService.ShowWarning("Enter Address");
            if (focus)
            {
                await E_ADDRESS.FocusAsync();
                focus = false;
            }
        }
        else
        {
            C_ADDRESS = back;
        }
        if (string.IsNullOrEmpty(modelEditAgent.LEGAL_NAME))
        {
            result = false;
            C_LEGAL_NAME = backerror;
            toastService.ShowWarning("Enter Legal Name");
            if (focus)
            {
                await E_LEGAL_NAME.FocusAsync();
                focus = false;
            }
        }
        else
        {
            C_LEGAL_NAME = back;
        }
        if (string.IsNullOrEmpty(modelEditAgent.DBA))
        {
            result = false;
            C_DBA = backerror;
            toastService.ShowWarning("Enter DBA");
            if (focus)
            {
                await E_DBA.FocusAsync();
                focus = false;
            }
        }
        else
        {
            C_DBA = back;
        }
        if (string.IsNullOrEmpty(modelEditAgent.PHONE))
        {
            result = false;
            C_PHONE = backerror;
            toastService.ShowWarning("Enter Phone");
            // if (focus)
            // {
            //     await E_PHONE.FocusAsync();
            //     focus = false;
            // }
        }
        else
        {
            C_PHONE = back;
        }
        if (string.IsNullOrEmpty(modelEditAgent.STATE))
        {
            result = false;
            C_STATE = backerror;
            toastService.ShowWarning("Enter State");
            if (focus)
            {
                await E_STATE.FocusAsync();
                focus = false;
            }
        }
        else
        {
            if (modelEditAgent.STATE.Contains("Select One"))
            {
                result = false;
                C_STATE = backerror;
                toastService.ShowWarning("Select State");
                if (focus)
                {
                    await E_STATE.FocusAsync();
                    focus = false;
                }
            }
            else
            {
                C_STATE = back;
            }
        }
        if (string.IsNullOrEmpty(modelEditAgent.CITY))
        {
            result = false;
            C_CITY = backerror;
            toastService.ShowWarning("Enter City");
            if (focus)
            {
                await E_CITY.FocusAsync();
                focus = false;
            }
        }
        else
        {
            C_CITY = back;
        }

        if (string.IsNullOrEmpty(modelEditAgent.COMMENT_UPDATE))
        {
            result = false;          
            toastService.ShowWarning("Enter Reason for Update");          
        }
        if(modelEditAgent.STATUS!=1)
        {
            if (string.IsNullOrEmpty(modelEditAgent.REASONFORBLOCK))
            {
                result = false;          
                toastService.ShowWarning("Enter Reason for Block");          
            }
        }

        StateHasChanged();
        return result;
    }
    private async Task AddEditModel()
    {
        isEditAgent = true;
        this.StateHasChanged();
    }
    private async Task CloseEditModel()
    {
        isEditAgent = false;
        this.StateHasChanged();

    }
    private async Task CloseAddNewModel()
    {
        isAddNewAgent = false;
        this.StateHasChanged();

    }
    private async Task AddNewModel()
    {
        modelAddNewAgent = new AgentModel();
        CountryList = AuthService.userMTRedSun.CountryList.ToList();
        modelAddNewAgent.COUNTRY = "US";

        //ChangeCountry(e);
        modelAddNewAgent.OwnerCountry="US";
        dynamic payload1 = new
        {
            UserID = model.UserID,
            CountryCode = modelAddNewAgent.OwnerCountry,
            pageIndex = 1,
            pageSize = 50
        };
        modelAddNewAgent.TYPE_AGENT=1;
        modelAddNewAgent.payment=false;
        modelAddNewAgent.Bond=false;
        modelAddNewAgent.OwnerCountry1="US";
        //ChangeOwner1Country(e);
        dynamic payload = new
        {
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "GetState",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelAddNewAgent.COUNTRY,
            pageIndex = 1,
            pageSize = 50
        };

        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            SendStateList = resp.Content.StateList;
            StateOwnerList = resp.Content.StateList;
            StateOwner1List = resp.Content.StateList;
             StateOwner3List = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelAddNewAgent.STATE = SendStateList[0].StateCode.ToString();
                modelAddNewAgent.OWNERSTATE = SendStateList[0].StateCode.ToString();
                modelAddNewAgent.OWNERSTATE1 = SendStateList[0].StateCode.ToString();
                modelAddNewAgent.OWNERSTATE3 = SendStateList[0].StateCode.ToString();
            }
        }

        dynamic payload2 = new
        { 
            Form = "/Indexs/AgentProfile",
            FormName = "Agent Profile",
            Action = "CountryAgentAdd",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID
        };
        CountryAgentResp  RespAgent = await HttpService.Post<CountryAgentResp>
              ("/Index/CountryAgentAdd", payload2);
        if (RespAgent.Status== 200)
        {
            CountryAgentSendAdd = RespAgent.Content.CountryAgentSend.ToList();
            CountryAgentReceiveAdd = RespAgent.Content.CountryAgentReceive.ToList();               
        }
        else
        {
            CountryAgentSendAdd = new List<CountryAgent>();
            CountryAgentReceiveAdd = new List<CountryAgent>();
        }

        isAddNewAgent = true;
        this.StateHasChanged();

    }
    public void CheckboxEditSendClicked(CountryAgent item, object checkedValue)
    {
        StateHasChanged();
        if ((bool)checkedValue)
        {
            item.hidden = true;
        }
        else
        {
            item.hidden = false;
        }
        StateHasChanged();
    }
    public void CheckboxEditReceiveClicked(CountryAgent item, object checkedValue)
    {
        StateHasChanged();
        if ((bool)checkedValue)
        {
            item.hidden = true;
        }
        else
        {
            item.hidden = false;
        }
        StateHasChanged();
    }
    public void CheckboxEditReceiveDefaultClicked(CountryAgent item, object checkedValue)
    {
        StateHasChanged();
        if ((bool)checkedValue)
        {
            item.MatDinh = true;
        }
        else
        {
            item.MatDinh = false;
        }
        StateHasChanged();
    }
    public void CheckboxSendClicked(CountryAgent item, object checkedValue)
    {
        StateHasChanged();
        if ((bool)checkedValue)
        {
            item.hidden = true;
        }
        else
        {
            item.hidden = false;
        }
        StateHasChanged();
    }
    public void CheckboxReceiveClicked(CountryAgent item, object checkedValue)
    {
        StateHasChanged();
        if ((bool)checkedValue)
        {
            item.hidden = true;
        }
        else
        {
            item.hidden = false;
        }
        StateHasChanged();
    }
    public void CheckboxReceiveDefaultClicked(CountryAgent item, object checkedValue)
    {
        StateHasChanged();
        if ((bool)checkedValue)
        {
            item.MatDinh = true;
        }
        else
        {
            item.MatDinh = false;
        }
        StateHasChanged();
    }
    private async Task EditAgent(string AgentID)
    {
        try
        {
            modelEditAgent = new AgentModel();    
            this.StateHasChanged();
            isEditAgent= true;
            isViewEditAgent = true;
            IsEditAgentSpin = true;
            dynamic payload = new
            { 
                Form = "/Indexs/AgentProfile",
                FormName = "Agent Profile",
                Action = "EditAgent",
                UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                Search = "",
                LEVEL_ACCESS ="",
                StatusID = "",
                UserID = model.UserID,
                AgentID = AgentID,
                Country = "",
                StateID ="",
                TypeofAgent = "",
                pageIndex = curPage,
                pageSize = pageSize
            };
            CountryList = AuthService.userMTRedSun.CountryList.ToList();
            AgentResp  RespAgent = await HttpService.Post<AgentResp>
                  ("/Index/GetAgents", payload);
            if (RespAgent.Status == 200)
            {
                modelEditAgent = RespAgent.Content.AgentModelList.ToList().FirstOrDefault();
                StateHasChanged();
            }
            IsEditAgentSpin=false;
            this.StateHasChanged();
            if(string.IsNullOrEmpty( modelEditAgent.COUNTRY) )
            {
                modelEditAgent.COUNTRY = "US";
            }
            if(string.IsNullOrEmpty( modelEditAgent.OwnerCountry) )
            {
                modelEditAgent.OwnerCountry = "US";
            }
            if(string.IsNullOrEmpty( modelEditAgent.OwnerCountry1) )
            {
                modelEditAgent.OwnerCountry1 = "US";
            }
            //modelEditAgent.COUNTRY = "US";

            ////ChangeCountry(e);
            //modelEditAgent.OwnerCountry="US";


            //modelEditAgent.OwnerCountry1="US";
            //ChangeOwner1Country(e);
            dynamic payload1 = new
            {  
                Form = "/Indexs/AgentProfile",
                 FormName = "Agent Profile",
                 Action = "GetState",
                 UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                CountryCode = modelEditAgent.COUNTRY,
                pageIndex = 1,
                pageSize = 50
            };

            var resp = await  HttpService.Request("post", "/Index/GetState", payload1);
            if (resp.Status.ToString() == "200")
            {
                SendStateList = resp.Content.StateList;
                //modelEditAgent.STATE = SendStateList[0].StateCode.ToString();
                if(modelEditAgent.COUNTRY==modelEditAgent.OwnerCountry)
                {
                    StateOwnerList = resp.Content.StateList;
                    //modelEditAgent.OWNERSTATE = SendStateList[0].StateCode.ToString();
                }
                else
                {
                    dynamic payload3 = new
                    {
                        Form = "/Indexs/AgentProfile",
                        FormName = "Agent Profile",
                        Action = "GetState",
                        UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                        UserID = model.UserID,
                        CountryCode = modelEditAgent.OwnerCountry,
                        pageIndex = 1,
                        pageSize = 50
                    };
                    var resp3 = await  HttpService.Request("post", "/Index/GetState", payload3);
                    if (resp3.Status.ToString() == "200")
                    {
                        StateOwnerList = resp3.Content.StateList;
                        //modelEditAgent.OWNERSTATE = SendStateList[0].StateCode.ToString();
                    }
                }
                if(modelEditAgent.COUNTRY==modelEditAgent.OwnerCountry1)
                {
                    StateOwner1List = resp.Content.StateList;
                    //modelEditAgent.OWNERSTATE1 = SendStateList[0].StateCode.ToString();
                }
                else
                {
                    dynamic payload4 = new
                    { 
                        Form = "/Indexs/AgentProfile",
                        FormName = "Agent Profile",
                        Action = "GetState",
                        UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                        UserID = model.UserID,
                        CountryCode = modelEditAgent.OwnerCountry1,
                        pageIndex = 1,
                        pageSize = 50
                    };
                    var resp3 =  HttpService.Request("post", "/Index/GetState", payload4);
                    if (resp3.Status.ToString() == "200")
                    {
                        StateOwner1List = resp3.Content.StateList;
                        // modelEditAgent.OWNERSTATE1 = SendStateList[0].StateCode.ToString();
                    }
                }          

                  if(modelEditAgent.COUNTRY==modelEditAgent.OwnerCountry3)
                {
                    StateOwner3List = resp.Content.StateList;
                    //modelEditAgent.OWNERSTATE1 = SendStateList[0].StateCode.ToString();
                }
                else
                {
                    dynamic payload4 = new
                    { 
                        Form = "/Indexs/AgentProfile",
                        FormName = "Agent Profile",
                        Action = "GetState",
                        UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                        UserID = model.UserID,
                        CountryCode = modelEditAgent.OwnerCountry3,
                        pageIndex = 1,
                        pageSize = 50
                    };
                    var resp3 =  HttpService.Request("post", "/Index/GetState", payload4);
                    if (resp3.Status.ToString() == "200")
                    {
                        StateOwner3List = resp3.Content.StateList;
                        // modelEditAgent.OWNERSTATE1 = SendStateList[0].StateCode.ToString();
                    }
                }      

            }

            dynamic payload2 = new
            { 
                Form = "/Indexs/AgentProfile",
                        FormName = "Agent Profile",
                        Action = "CountryAgentEdit",
                        UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                AgentID = AgentID
            };
            CountryAgentResp  RespA = await HttpService.Post<CountryAgentResp>
                  ("/Index/CountryAgentEdit", payload2);
            if (RespA.Status== 200)
            {
                CountryAgentSendEdit = RespA.Content.CountryAgentSend.ToList();
                CountryAgentReceiveEdit = RespA.Content.CountryAgentReceive.ToList();               
            }
            else
            {
                CountryAgentSendEdit = new List<CountryAgent>();
                CountryAgentReceiveEdit = new List<CountryAgent>();
            }

            dynamic payload5 = new
            {
                Form = "/Indexs/AgentProfile",
                        FormName = "Agent Profile",
                        Action = "GetAgentFile",
                        UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                AgentID = AgentID,
                pageIndex = 1,
                pageSize = 50
            };
       
            this.StateHasChanged();
            AgentFileResps respdoc = await  HttpService.Post<AgentFileResps>
            ("/Index/GetAgentFile", payload5);
            if (respdoc.Status.ToString() == "200")
            {
                SenderDocumentsList = respdoc.Content.AgentFileLists;
            }
            else
            {
                toastService.ShowWarning(respdoc.Message.ToString());
                SenderDocumentsList = new List<AgentFile>();
            }

            
            dynamic payload6 = new
            {
                Form = "/Indexs/AgentProfile",
                 FormName = "Agent Profile",
                Action = "AgentEditReasonHistory",
                 UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                AgentID = AgentID,
                pageIndex = 1,
                pageSize = 50
            };

            AgentHistoryListResps respHis = await  HttpService.Post<AgentHistoryListResps>
            ("/Index/AgentEditReasonHistory", payload6);
            if (respHis.Status.ToString() == "200")
            {
                AgentHistoryList = respHis.Content.AgentHistoryLists;
            }
            else
            {
                toastService.ShowWarning(respdoc.Message.ToString());
                AgentHistoryList = new List<AgentHistory>();
            }

        }
        catch(Exception ex)
        {
             IsEditAgentSpin=false;
        }
         IsEditAgentSpin=false;
        this.StateHasChanged();

    }
    public async Task NavigateToPage(string direction)
    {
        switch (direction)
        {
            case "first":
                SetPageSize("first");
                curPage = startPage;
                break;
            case "next":
                if (curPage < totalPages)
                {
                    if (curPage == endPage)
                    {
                        SetPageSize("forward");
                    }
                    curPage += 1;
                }
                break;
            case "prev":
                if (curPage > 1)
                {
                    if (curPage == startPage)
                    {
                        SetPageSize("back");
                    }
                    curPage -= 1;

                }
                break;
            default:
                SetPageSize("last");
                curPage = totalPages;
                break;
        }
        RefreshRecord(curPage);
        refreshNoidung();
        this.StateHasChanged();
    }
    public async Task refreshNoidung()
    {
        this.StateHasChanged();
        Int64 Totalre = curPage * pageSize;
        if (Totalre > totalRecords)
        {
            Totalre = totalRecords;
        }
        noidungpage = "Showing " + (((curPage - 1) * pageSize) + 1).ToString() + " to " + Totalre + " of " + totalRecords + " entries";
        this.StateHasChanged();
    }
    public async Task SetPageSize(string direction)
    {
        this.StateHasChanged();
        if (direction == "forward" && endPage < totalPages)
        {
            startPage = endPage + 1;
            if (endPage + pagerSize < totalPages)
            {
                endPage = startPage + pagerSize - 1;
            }
            else
            {
                endPage = totalPages;
            }
            if (endPage > totalPages)
            {
                endPage = totalPages;
            }
            if (startPage == endPage)
            {
                startPage = endPage - pagerSize + 1;
            }
            if (startPage <= 0)
            {
                startPage = 1;
            }
        }
        else if (direction == "back" && startPage > 1)
        {
            startPage = startPage - 1;
            endPage = startPage + pagerSize - 1;
            if (endPage > totalPages)
            {
                endPage = totalPages;
            }
            if (startPage <= 0)
            {
                startPage = 1;
            }
            if (endPage > totalPages)
            {
                endPage = totalPages;
            }
        }
        else if (direction == "first")
        {
            startPage = 1;
            endPage = startPage + pagerSize - 1;
            if (endPage > totalPages)
            {
                endPage = totalPages;
            }
        }
        else if (direction == "last")
        {
            startPage = totalPages - pagerSize + 1;
            if (startPage <= 0)
            {
                startPage = 1;
            }
            endPage = totalPages;

        }
        refreshNoidung();
        this.StateHasChanged();
    }
    public async Task RefreshRecord(Int64 currentPage)
    {
        curPage = currentPage;
        await getData();
        await refreshNoidung();

        this.StateHasChanged();
    }
    protected async void ChangeEditCountry(ChangeEventArgs e)
    {
        StateHasChanged();
        modelAddNewAgent.COUNTRY = e.Value.ToString();
        dynamic payload = new
        {
            Form = "/Reports/AgentListforFinCEN",
            FormName = "Agent List for FinCEN",
            Action = "ChangeEditCountry",
            UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
            UserID = model.UserID,
            CountryCode = modelEditAgent.COUNTRY,
            pageIndex = 1,
            pageSize = 50
        };

        var resp = await HttpService.Request("post", "/Index/GetState", payload);
        if (resp.Status.ToString() == "200")
        {
            SendStateList = resp.Content.StateList;
            if (resp.Content.StateList.Count > 0)
            {
                modelEditAgent.STATE = SendStateList[0].StateCode.ToString();
            }
        }

        StateHasChanged();
    }
    public async Task getData( string Form = "",string FormName = "",string Action = "")
    {
        try
        {
            StateHasChanged();
            dynamic payload = new
            { 
               Form = Form,
               FormName = FormName,
               Action = Action,
                UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                Search = model.Search,
                LEVEL_ACCESS = model.LEVEL_ACCESS,
                StatusID = model.StatusID,
                UserID = model.UserID,
                AgentID = model.AgentID,
                Country = model.ToCountry,
                StateID = model.StateID,
                TypeofAgent = model.TypeofAgent,
                pageIndex = curPage,
                pageSize = pageSize
            };
            AgentResp  RespCustomer = await HttpService.Post<AgentResp>
                  ("/Index/GetAgents", payload);
            if (RespCustomer.Status == 200)
            {
                viewSearch = true;
                AgentListModels = RespCustomer.Content.AgentModelList.ToList();
                //foreach(var item in AgentListModels)
                //{
                //    if(item.FileSign!=null)
                //    {
                //        item.FileImage = Convert.ToBase64String(item.FileSign);
                //    }
                //}
                isView = true;
                isViewingSender = "initial";
                  displayVerify = "initial";

            }
            else
            {
                if(RespCustomer.Status==99)
                {
                    await  AuthService.Logout();
                }
                else
                {
                    toastService.ShowWarning(RespCustomer.Message.ToString());
                }
                AgentListModels = new List<AgentModel>();
                isView = false;
                viewSearch = false;
                  displayVerify = "None";
            }
            this.StateHasChanged();
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
        }

    }
    protected async Task ChangepageSize(ChangeEventArgs e)
    {
        pageSize = Convert.ToInt64(e.Value.ToString());

        await getData();
        await SetPageSize("forward");
        await refreshNoidung();
        StateHasChanged();
    }
    protected async void ChangeCountryIssue(ChangeEventArgs e)
    {
        StateHasChanged();


        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Initialize auth service for Blazor Server
            await AuthService.Initialize();
            if(AuthService.userMTRedSun==null)
            {
                await AuthService.Logout();
                return;
            }
            else
            {
            menuChildLists = AuthService.userMTRedSun.MenuChildList.ToList();
            if (menuChildLists.Count > 0)
            {
                List<MenuChildList> menuChildList = new List<MenuChildList>();
                menuChildList = menuChildLists.Where(x => x.LinkPageColor == pagename).ToList();
                if (menuChildList.Count == 0)
                {
                    toastService.ShowWarning("This function is not authorized!", "Warning");
                    await AuthService.Logout();
                }
            }
            var dimension = await Service.GetDimensions();
            Height = dimension.Height+78 - 262;
            if (Height <= 200)
            {
                Height = 200;
            }
            MaxHeight = Height.ToString() + "px"; HeightBody = dimension.Height - 63; MaxHeightBody = HeightBody.ToString() + "px";
            Width = dimension.Width - (dimension.Width / 5);
            if (Width <= 200)
            {
                Width = 200;
            }
            MaxWidths = Width.ToString() + "px";

            model.UserID = AuthService.userMTRedSun.Id.ToString();
            AgentList = AuthService.userMTRedSun.AgentList.ToList();
            AgentLists = AgentList.FirstOrDefault();
            model.AgentID = AgentLists.Agent_ID.ToString();

            UserTypeList = AuthService.userMTRedSun.UserTypeList.ToList().Where(x => x.TYPE_AGENT != "3").ToList();
            UserTypeLists = AuthService.userMTRedSun.UserTypeList.ToList().Where(x => x.TYPE_AGENT == "1" || x.TYPE_AGENT == "2").ToList();

            UserTypes = UserTypeList.FirstOrDefault();
            model.UserType = UserTypes.TYPE_AGENT.ToString();

            TypeofStatusList = AuthService.userMTRedSun.AgentStatusList.ToList();
            TypeofStatuses = TypeofStatusList.FirstOrDefault();
            model.StatusID = TypeofStatuses.StatusID.ToString();

            TypeofStatusListEdit = AuthService.userMTRedSun.AgentStatusList.ToList().Where(x => x.StatusID != "0").ToList();
            StateList = AuthService.userMTRedSun.StateList.ToList();
            StateLists = StateList.FirstOrDefault();
            model.StateID = StateLists.StateCode.ToString();

            AccessLevelList = AuthService.userMTRedSun.AccessLevelList.ToList();
            AccessLevels = AccessLevelList.FirstOrDefault();
            model.LEVEL_ACCESS = AccessLevels.LEVEL_ACCESS.ToString();

            ReceiveCountryList = AuthService.userMTRedSun.ReceiveCountryList.ToList();
            ReceiveCountryLists = ReceiveCountryList.FirstOrDefault();
            model.ToCountry = ReceiveCountryLists.CountryCode.ToString();

            businessList = AuthService.userMTRedSun.BusinessList.ToList();

            StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            // Handle error silently or show toast
            toastService.ShowError("Error initializing page: " + ex.Message);
        }
    }
    protected bool Validate()
    {
        bool result = true;
        if (string.IsNullOrEmpty(model.Phone) && string.IsNullOrEmpty(model.Address)
        && string.IsNullOrEmpty(model.FullName) && string.IsNullOrEmpty(model.SSN) && string.IsNullOrEmpty(model.DriverID))
        {
            result = false;
            toastService.ShowWarning("Enter condition search");
        }

        StateHasChanged();

        return result;
    }
    protected async void ChangeCustomer(ChangeEventArgs e)
    {
    }
    protected async void ChangeRecipient(ChangeEventArgs e)
    {


    }
    protected async void ViewReport()
    {
        try
        {
            curPage = 1;
            isViewingReport = true;
            StateHasChanged();
            await getData();
            if (AgentListModels.Count>0)
            {
                toastService.ShowSuccess("Load data successful!");
            }
            else
            {
                toastService.ShowWarning("Nothing to view!");
            }
            isViewingReport = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {

            toastService.ShowError(ex.Message);
        }
        isViewingReport = false;
        StateHasChanged();
    }
    private async Task NotConfirmDeleteFile()
    {
        IsViewDelete = false;
        this.StateHasChanged();
    }
    private async Task ConfirmDeleteFile()
    {
        try
        {
            dynamic payload = new
            {
                Form = "/Indexs/AgentProfile",
                 FormName = "Agent Profile",
                 Action = "ConfirmDeleteFile",
                 UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                UserID = model.UserID,
                AgentID = modelEditAgent.AGENT_ID,
                ID = idDel
            };
                
            StateHasChanged();
            var resp = await HttpService.Request("post", "/Index/DeleteAgentFile", payload);                  
            if (resp.Status.ToString() == "200")
            {
                loadedFiles.Clear();

                dynamic payload1 = new
                {
                    Form = "/Indexs/AgentProfile",
                    FormName = "Agent Profile",
                    Action = "GetAgentFile",
                    UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                    UserID = model.UserID,
                    AgentID = modelEditAgent.AGENT_ID,
                    pageIndex = 1,
                    pageSize = 50
                };
                AgentFileResps respdoc = await HttpService.Post<AgentFileResps>
                ("/Index/GetAgentFile", payload1);
                if (respdoc.Status.ToString() == "200")
                {
                    SenderDocumentsList = respdoc.Content.AgentFileLists.ToList() ;
                    toastService.ShowSuccess("Delete file successful");
                }
                else
                {
                    toastService.ShowWarning(respdoc.Message.ToString());
                    SenderDocumentsList = new List<AgentFile>();
                }
            }
            else
            {
                toastService.ShowWarning(resp.Message.ToString());
            }

        }           
        catch (Exception ex)
        {
           
            toastService.ShowError(ex.Message);
        }
        IsViewDelete = false;
        this.StateHasChanged();
    }
    private async Task DeleteFile(Int64 id)
    {
       
            idDel = id;
            IsViewDelete = true;
          
    }
     public async Task DownloadFileFromStreamNew(string FileName,Int64 No)
    {
        try
        {
                dynamic payload = new
                {
                     Form = "/Indexs/AgentProfile",
                 FormName = "Agent Profile",
                 Action = "GetAgentFileID",
                 UserName = AuthService.userMTRedSun.UserName == null ? "" : AuthService.userMTRedSun.UserName.ToString(),
                    UserID = model.UserID,
                    AgentID = modelEditAgent.AGENT_ID,
                    ID = No,
                    pageIndex = 1,
                    pageSize = 50
                };
                        AgentFileResps respdoc = await HttpService.Post<AgentFileResps>
            ("/Index/GetAgentFileID", payload);
                        if (respdoc.Status.ToString() == "200")
                        {
                            SenderDocumentsList1 = respdoc.Content.AgentFileLists;
                            DownloadFileFromStream(SenderDocumentsList1[0].FileName,SenderDocumentsList1[0].FileLoad);
                        }
            
        }           
        catch (Exception ex)
        {
           
            toastService.ShowError(ex.Message);
        }
    }
    private async Task DownloadFileFromStream(string FileName,byte[]? FileLoad)
    {
        try
        {
            var fileStream = GetFileStream(FileLoad);   
            using var streamRef = new DotNetStreamReference(stream: fileStream);
            await JS.InvokeVoidAsync("downloadFileFromStream", FileName, streamRef);
        }           
        catch (Exception ex)
        {         
            toastService.ShowError(ex.Message);
        }
    }
    private Stream GetFileStream(byte[]? FileLoad)
    {       
        try
        {
            var fileStream = new MemoryStream(FileLoad);
            return fileStream;
        }
        catch (Exception ex)
        {
            return null;          
            toastService.ShowError(ex.Message);
        }
    }
}

